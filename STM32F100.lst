
STM32F100.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00000134  00000000  00000000  00008000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .eh_frame     00000004  00000134  00000134  00008134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .ARM.exidx    00000008  00000138  00000138  00008138  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .text         000001e8  00000140  00000140  00008140  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .init         0000000c  00000328  00000328  00008328  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .fini         0000000c  00000334  00000334  00008334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .text.exit    00000028  00000340  00000340  00008340  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .text.__libc_init_array 0000004c  00000368  00000368  00008368  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .text.memset  00000010  000003b4  000003b4  000083b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .text.findslot 00000034  000003c4  000003c4  000083c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .text.error   0000001c  000003f8  000003f8  000083f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text.checkerror 0000000a  00000414  00000414  00008414  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text.initialise_monitor_handles 000000a0  00000420  00000420  00008420  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text._swiread 00000020  000004c0  000004c0  000084c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text._read   00000034  000004e0  000004e0  000084e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text._swilseek 0000007e  00000514  00000514  00008514  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text._lseek  00000004  00000592  00000592  00008592  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text._swiwrite 00000020  00000596  00000596  00008596  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text._write  00000042  000005b6  000005b6  000085b6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text._swiclose 0000001c  000005f8  000005f8  000085f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text._close  00000048  00000614  00000614  00008614  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text._getpid 00000004  0000065c  0000065c  0000865c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text._sbrk   00000034  00000660  00000660  00008660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text._swistat 00000042  00000694  00000694  00008694  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text._fstat  0000001c  000006d6  000006d6  000086d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text._stat   0000003a  000006f2  000006f2  000086f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text._swiopen 000000bc  0000072c  0000072c  0000872c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text._open   00000012  000007e8  000007e8  000087e8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text._link   00000010  000007fa  000007fa  000087fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text._unlink 00000028  0000080a  0000080a  0000880a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text._gettimeofday 00000026  00000832  00000832  00008832  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text._clock  00000012  00000858  00000858  00008858  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text._times  00000016  0000086a  0000086a  0000886a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text._isatty 0000003c  00000880  00000880  00008880  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text._system 0000003c  000008bc  000008bc  000088bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text._rename 00000036  000008f8  000008f8  000088f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text._exit   00000008  0000092e  0000092e  0000892e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text._kill   00000020  00000938  00000938  00008938  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.Reset_Handler 0000004c  00000958  00000958  00008958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.Default_Handler 00000004  000009a4  000009a4  000089a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.startup 00000058  000009a8  000009a8  000089a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.__errno 0000000c  00000a00  00000a00  00008a00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.__fp_lock 00000004  00000a0c  00000a0c  00008a0c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.__fp_unlock 00000004  00000a10  00000a10  00008a10  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text._cleanup_r 00000032  00000a14  00000a14  00008a14  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.std.isra.0 00000048  00000a48  00000a48  00008a48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.__sfmoreglue 0000002c  00000a90  00000a90  00008a90  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text._cleanup 0000000c  00000abc  00000abc  00008abc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.__sinit 00000060  00000ac8  00000ac8  00008ac8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.__sfp   00000074  00000b28  00000b28  00008b28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.__sfp_lock_acquire 00000002  00000b9c  00000b9c  00008b9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.__sfp_lock_release 00000002  00000b9e  00000b9e  00008b9e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.__sinit_lock_acquire 00000002  00000ba0  00000ba0  00008ba0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.__sinit_lock_release 00000002  00000ba2  00000ba2  00008ba2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.__fp_lock_all 00000014  00000ba4  00000ba4  00008ba4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.__fp_unlock_all 00000014  00000bb8  00000bb8  00008bb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text._fwalk  00000038  00000bcc  00000bcc  00008bcc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text._fwalk_reent 0000003c  00000c04  00000c04  00008c04  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text._malloc_r 000000a8  00000c40  00000c40  00008c40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .text._puts_r 000000c0  00000ce8  00000ce8  00008ce8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .text.puts    00000010  00000da8  00000da8  00008da8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .text._sbrk_r 00000020  00000db8  00000db8  00008db8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .text.__sread 00000022  00000dd8  00000dd8  00008dd8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .text.__seofread 00000004  00000dfa  00000dfa  00008dfa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .text.__swrite 00000038  00000dfe  00000dfe  00008dfe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .text.__sseek 00000024  00000e36  00000e36  00008e36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .text.__sclose 00000008  00000e5a  00000e5a  00008e5a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .text.strlen  00000010  00000e62  00000e62  00008e62  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text.__swbuf_r 000000a8  00000e74  00000e74  00008e74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .text.__swbuf 00000014  00000f1c  00000f1c  00008f1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .text._write_r 00000024  00000f30  00000f30  00008f30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .text.__swsetup_r 000000dc  00000f54  00000f54  00008f54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 .text._close_r 00000020  00001030  00001030  00009030  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 .text.__sflush_r 00000106  00001050  00001050  00009050  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 .text._fflush_r 00000054  00001158  00001158  00009158  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 .text.fflush  00000024  000011ac  000011ac  000091ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 .text._lseek_r 00000024  000011d0  000011d0  000091d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 .text.__smakebuf_r 00000098  000011f4  000011f4  000091f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 .text._free_r 00000088  0000128c  0000128c  0000928c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 .text._read_r 00000024  00001314  00001314  00009314  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 .text.cleanup_glue 0000001a  00001338  00001338  00009338  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 .text._reclaim_reent 000000bc  00001354  00001354  00009354  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 .text._fstat_r 00000024  00001410  00001410  00009410  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 .text._isatty_r 00000020  00001434  00001434  00009434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 .data         00000114  20000000  00001454  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 85 .init_array   00000004  20000114  00001568  00010114  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 86 .fini_array   00000004  20000118  0000156c  00010118  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 87 .jcr          00000004  2000011c  00001570  0001011c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 88 .data.impure_data 00000060  20000120  00001574  00010120  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 89 .data._impure_ptr 00000004  20000180  000015d4  00010180  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 90 .bss          00000020  20000184  000015d8  00010184  2**2
                  ALLOC
 91 .bss.monitor_stdout 00000004  200001a4  000015d8  000101a4  2**2
                  ALLOC
 92 .bss.monitor_stdin 00000004  200001a8  000015d8  000101a8  2**2
                  ALLOC
 93 .bss.monitor_stderr 00000004  200001ac  000015d8  000101ac  2**2
                  ALLOC
 94 .bss.heap_end.5794 00000004  200001b0  000015d8  000101b0  2**2
                  ALLOC
 95 .bss.openfiles 000000a0  200001b4  000015d8  000101b4  2**2
                  ALLOC
 96 .bss.__malloc_sbrk_start 00000004  20000254  000015d8  00010254  2**2
                  ALLOC
 97 .bss.__malloc_free_list 00000004  20000258  000015d8  00010258  2**2
                  ALLOC
 98 .ARM.attributes 00000029  00000000  00000000  00010184  2**0
                  CONTENTS, READONLY
 99 .comment      00000070  00000000  00000000  000101ad  2**0
                  CONTENTS, READONLY
100 .debug_frame  00000958  00000000  00000000  00010220  2**2
                  CONTENTS, READONLY, DEBUGGING
101 .debug_info   00000144  00000000  00000000  00010b78  2**0
                  CONTENTS, READONLY, DEBUGGING
102 .debug_abbrev 00000108  00000000  00000000  00010cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
103 .debug_aranges 00000040  00000000  00000000  00010dc4  2**0
                  CONTENTS, READONLY, DEBUGGING
104 .debug_line   000000e3  00000000  00000000  00010e04  2**0
                  CONTENTS, READONLY, DEBUGGING
105 .debug_str    00000157  00000000  00000000  00010ee7  2**0
                  CONTENTS, READONLY, DEBUGGING
106 .debug_ranges 00000010  00000000  00000000  0001103e  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .vectors	00000000 .vectors
00000134 l    d  .eh_frame	00000000 .eh_frame
00000138 l    d  .ARM.exidx	00000000 .ARM.exidx
00000140 l    d  .text	00000000 .text
00000328 l    d  .init	00000000 .init
00000334 l    d  .fini	00000000 .fini
00000340 l    d  .text.exit	00000000 .text.exit
00000368 l    d  .text.__libc_init_array	00000000 .text.__libc_init_array
000003b4 l    d  .text.memset	00000000 .text.memset
000003c4 l    d  .text.findslot	00000000 .text.findslot
000003f8 l    d  .text.error	00000000 .text.error
00000414 l    d  .text.checkerror	00000000 .text.checkerror
00000420 l    d  .text.initialise_monitor_handles	00000000 .text.initialise_monitor_handles
000004c0 l    d  .text._swiread	00000000 .text._swiread
000004e0 l    d  .text._read	00000000 .text._read
00000514 l    d  .text._swilseek	00000000 .text._swilseek
00000592 l    d  .text._lseek	00000000 .text._lseek
00000596 l    d  .text._swiwrite	00000000 .text._swiwrite
000005b6 l    d  .text._write	00000000 .text._write
000005f8 l    d  .text._swiclose	00000000 .text._swiclose
00000614 l    d  .text._close	00000000 .text._close
0000065c l    d  .text._getpid	00000000 .text._getpid
00000660 l    d  .text._sbrk	00000000 .text._sbrk
00000694 l    d  .text._swistat	00000000 .text._swistat
000006d6 l    d  .text._fstat	00000000 .text._fstat
000006f2 l    d  .text._stat	00000000 .text._stat
0000072c l    d  .text._swiopen	00000000 .text._swiopen
000007e8 l    d  .text._open	00000000 .text._open
000007fa l    d  .text._link	00000000 .text._link
0000080a l    d  .text._unlink	00000000 .text._unlink
00000832 l    d  .text._gettimeofday	00000000 .text._gettimeofday
00000858 l    d  .text._clock	00000000 .text._clock
0000086a l    d  .text._times	00000000 .text._times
00000880 l    d  .text._isatty	00000000 .text._isatty
000008bc l    d  .text._system	00000000 .text._system
000008f8 l    d  .text._rename	00000000 .text._rename
0000092e l    d  .text._exit	00000000 .text._exit
00000938 l    d  .text._kill	00000000 .text._kill
00000958 l    d  .text.Reset_Handler	00000000 .text.Reset_Handler
000009a4 l    d  .text.Default_Handler	00000000 .text.Default_Handler
000009a8 l    d  .text.startup	00000000 .text.startup
00000a00 l    d  .text.__errno	00000000 .text.__errno
00000a0c l    d  .text.__fp_lock	00000000 .text.__fp_lock
00000a10 l    d  .text.__fp_unlock	00000000 .text.__fp_unlock
00000a14 l    d  .text._cleanup_r	00000000 .text._cleanup_r
00000a48 l    d  .text.std.isra.0	00000000 .text.std.isra.0
00000a90 l    d  .text.__sfmoreglue	00000000 .text.__sfmoreglue
00000abc l    d  .text._cleanup	00000000 .text._cleanup
00000ac8 l    d  .text.__sinit	00000000 .text.__sinit
00000b28 l    d  .text.__sfp	00000000 .text.__sfp
00000b9c l    d  .text.__sfp_lock_acquire	00000000 .text.__sfp_lock_acquire
00000b9e l    d  .text.__sfp_lock_release	00000000 .text.__sfp_lock_release
00000ba0 l    d  .text.__sinit_lock_acquire	00000000 .text.__sinit_lock_acquire
00000ba2 l    d  .text.__sinit_lock_release	00000000 .text.__sinit_lock_release
00000ba4 l    d  .text.__fp_lock_all	00000000 .text.__fp_lock_all
00000bb8 l    d  .text.__fp_unlock_all	00000000 .text.__fp_unlock_all
00000bcc l    d  .text._fwalk	00000000 .text._fwalk
00000c04 l    d  .text._fwalk_reent	00000000 .text._fwalk_reent
00000c40 l    d  .text._malloc_r	00000000 .text._malloc_r
00000ce8 l    d  .text._puts_r	00000000 .text._puts_r
00000da8 l    d  .text.puts	00000000 .text.puts
00000db8 l    d  .text._sbrk_r	00000000 .text._sbrk_r
00000dd8 l    d  .text.__sread	00000000 .text.__sread
00000dfa l    d  .text.__seofread	00000000 .text.__seofread
00000dfe l    d  .text.__swrite	00000000 .text.__swrite
00000e36 l    d  .text.__sseek	00000000 .text.__sseek
00000e5a l    d  .text.__sclose	00000000 .text.__sclose
00000e62 l    d  .text.strlen	00000000 .text.strlen
00000e74 l    d  .text.__swbuf_r	00000000 .text.__swbuf_r
00000f1c l    d  .text.__swbuf	00000000 .text.__swbuf
00000f30 l    d  .text._write_r	00000000 .text._write_r
00000f54 l    d  .text.__swsetup_r	00000000 .text.__swsetup_r
00001030 l    d  .text._close_r	00000000 .text._close_r
00001050 l    d  .text.__sflush_r	00000000 .text.__sflush_r
00001158 l    d  .text._fflush_r	00000000 .text._fflush_r
000011ac l    d  .text.fflush	00000000 .text.fflush
000011d0 l    d  .text._lseek_r	00000000 .text._lseek_r
000011f4 l    d  .text.__smakebuf_r	00000000 .text.__smakebuf_r
0000128c l    d  .text._free_r	00000000 .text._free_r
00001314 l    d  .text._read_r	00000000 .text._read_r
00001338 l    d  .text.cleanup_glue	00000000 .text.cleanup_glue
00001354 l    d  .text._reclaim_reent	00000000 .text._reclaim_reent
00001410 l    d  .text._fstat_r	00000000 .text._fstat_r
00001434 l    d  .text._isatty_r	00000000 .text._isatty_r
20000000 l    d  .data	00000000 .data
20000114 l    d  .init_array	00000000 .init_array
20000118 l    d  .fini_array	00000000 .fini_array
2000011c l    d  .jcr	00000000 .jcr
20000120 l    d  .data.impure_data	00000000 .data.impure_data
20000180 l    d  .data._impure_ptr	00000000 .data._impure_ptr
20000184 l    d  .bss	00000000 .bss
200001a4 l    d  .bss.monitor_stdout	00000000 .bss.monitor_stdout
200001a8 l    d  .bss.monitor_stdin	00000000 .bss.monitor_stdin
200001ac l    d  .bss.monitor_stderr	00000000 .bss.monitor_stderr
200001b0 l    d  .bss.heap_end.5794	00000000 .bss.heap_end.5794
200001b4 l    d  .bss.openfiles	00000000 .bss.openfiles
20000254 l    d  .bss.__malloc_sbrk_start	00000000 .bss.__malloc_sbrk_start
20000258 l    d  .bss.__malloc_free_list	00000000 .bss.__malloc_free_list
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 Objects/startup.o
00000966 l       .text.Reset_Handler	00000000 LoopCopyDataInit
0000095e l       .text.Reset_Handler	00000000 CopyDataInit
0000097e l       .text.Reset_Handler	00000000 LoopFillZerobss
00000978 l       .text.Reset_Handler	00000000 FillZerobss
000009a4 l       .text.Default_Handler	00000000 Infinite_Loop
00000000 l    df *ABS*	00000000 crtstuff.c
00000134 l     O .eh_frame	00000000 __EH_FRAME_BEGIN__
2000011c l     O .jcr	00000000 __JCR_LIST__
00000140 l     F .text	00000000 __do_global_dtors_aux
20000184 l       .bss	00000000 completed.7873
20000118 l     O .fini_array	00000000 __do_global_dtors_aux_fini_array_entry
00000164 l     F .text	00000000 frame_dummy
20000188 l       .bss	00000000 object.7878
20000114 l     O .init_array	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 crtstuff.c
00000134 l     O .eh_frame	00000000 __FRAME_END__
2000011c l     O .jcr	00000000 __JCR_END__
00000000 l    df *ABS*	00000000 /Users/liamg/Documents/gcc-arm-none-eabi-4_8-2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/../../../../arm-none-eabi/lib/armv7-m/rdimon-crt0.o
20000004 l       .data	00000000 HeapBase
20000014 l       .data	00000000 CommandLine
20000008 l       .data	00000000 HeapLimit
20000010 l       .data	00000000 StackLimit
00000000 l    df *ABS*	00000000 /Users/liamg/Documents/gcc-arm-none-eabi-4_8-2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv7-m/crti.o
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 impure.c
20000120 l     O .data.impure_data	00000060 impure_data
00000000 l    df *ABS*	00000000 init.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 syscalls.c
000003c4 l     F .text.findslot	00000034 findslot
000003f8 l     F .text.error	0000001c error
00000414 l     F .text.checkerror	0000000a checkerror
200001a4 l     O .bss.monitor_stdout	00000004 monitor_stdout
200001a8 l     O .bss.monitor_stdin	00000004 monitor_stdin
200001ac l     O .bss.monitor_stderr	00000004 monitor_stderr
200001b0 l     O .bss.heap_end.5794	00000004 heap_end.5794
200001b4 l     O .bss.openfiles	000000a0 openfiles
00000000 l    df *ABS*	00000000 _exit.c
00000000 l    df *ABS*	00000000 _kill.c
00000000 l    df *ABS*	00000000 Initialize.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 findfp.c
00000a0c l     F .text.__fp_lock	00000004 __fp_lock
00000a10 l     F .text.__fp_unlock	00000004 __fp_unlock
00000a48 l     F .text.std.isra.0	00000048 std.isra.0
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 /Users/liamg/Documents/gcc-arm-none-eabi-4_8-2013q4/bin/../lib/gcc/arm-none-eabi/4.8.3/armv7-m/crtn.o
00000000 l    df *ABS*	00000000 
000009a4  w    F .text.Default_Handler	00000004 EXTI2_IRQHandler
00001434 g     F .text._isatty_r	00000020 _isatty_r
00001338 g     F .text.cleanup_glue	0000001a cleanup_glue
0000065c  w    F .text._getpid	00000004 _getpid
00000ce8 g     F .text._puts_r	000000c0 _puts_r
000011d0 g     F .text._lseek_r	00000024 _lseek_r
000009a4  w    F .text.Default_Handler	00000004 DebugMon_Handler
20000000 g       .data	00000000 __data_start__
000009a4  w    F .text.Default_Handler	00000004 TIM1_CC_IRQHandler
00000e36 g     F .text.__sseek	00000024 __sseek
00000ac8 g     F .text.__sinit	00000060 __sinit
00000e74 g     F .text.__swbuf_r	000000a8 __swbuf_r
000009a4  w    F .text.Default_Handler	00000004 HardFault_Handler
00000a90 g     F .text.__sfmoreglue	0000002c __sfmoreglue
000009a4  w    F .text.Default_Handler	00000004 SysTick_Handler
000009a4  w    F .text.Default_Handler	00000004 PVD_IRQHandler
00000420 g     F .text.initialise_monitor_handles	000000a0 initialise_monitor_handles
00000abc g     F .text._cleanup	0000000c _cleanup
000009a4  w    F .text.Default_Handler	00000004 PendSV_Handler
000009a4  w    F .text.Default_Handler	00000004 NMI_Handler
000009a4  w    F .text.Default_Handler	00000004 EXTI3_IRQHandler
00000a00 g     F .text.__errno	0000000c __errno
00000858 g     F .text._clock	00000012 _clock
00001410 g     F .text._fstat_r	00000024 _fstat_r
200001a0 g     O .bss	00000004 errno
00000dfa g     F .text.__seofread	00000004 __seofread
00000a14 g     F .text._cleanup_r	00000032 _cleanup_r
000009a4  w    F .text.Default_Handler	00000004 EXTI0_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 I2C2_EV_IRQHandler
00000da8 g     F .text.puts	00000010 puts
000009a4  w    F .text.Default_Handler	00000004 TIM1_UP_TIM16_IRQHandler
000006d6  w    F .text._fstat	0000001c _fstat
000009a4  w    F .text.Default_Handler	00000004 UsageFault_Handler
00000694 g     F .text._swistat	00000042 _swistat
20000184 g       .bss	00000000 __bss_start__
20000000 g     O .data	00000000 .hidden __dso_handle
000009a4  w    F .text.Default_Handler	00000004 SPI1_IRQHandler
00000db8 g     F .text._sbrk_r	00000020 _sbrk_r
000009a4  w    F .text.Default_Handler	00000004 TAMPER_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 TIM6_DAC_IRQHandler
00001314 g     F .text._read_r	00000024 _read_r
000011ac g     F .text.fflush	00000024 fflush
00000880 g     F .text._isatty	0000003c _isatty
000002b0 g     O .text	00000004 _global_impure_ptr
00000368 g     F .text.__libc_init_array	0000004c __libc_init_array
000009a4  w    F .text.Default_Handler	00000004 DMA2_Channel2_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 DMA1_Channel4_IRQHandler
00000194 g     F .text	00000000 _mainCRTStartup
000007e8 g     F .text._open	00000012 _open
000009a4  w    F .text.Default_Handler	00000004 ADC1_IRQHandler
00000660 g     F .text._sbrk	00000034 _sbrk
00000ba4 g     F .text.__fp_lock_all	00000014 __fp_lock_all
00000328 g     F .init	00000000 _init
000009a4  w    F .text.Default_Handler	00000004 USART3_IRQHandler
00000000  w      *UND*	00000000 __libc_fini_array
000009a4  w    F .text.Default_Handler	00000004 RTC_IRQHandler
0000086a g     F .text._times	00000016 _times
000009a4  w    F .text.Default_Handler	00000004 DMA1_Channel7_IRQHandler
00000958  w    F .text.Reset_Handler	00000038 Reset_Handler
00001354 g     F .text._reclaim_reent	000000bc _reclaim_reent
000009a4  w    F .text.Default_Handler	00000004 UART5_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 TIM4_IRQHandler
000006f2  w    F .text._stat	0000003a _stat
000009a4  w    F .text.Default_Handler	00000004 DMA2_Channel1_IRQHandler
00000308 g     O .text	00000020 __sf_fake_stderr
00000000  w      *UND*	00000000 __deregister_frame_info
200001a4 g       .bss	00000000 end
000009a4  w    F .text.Default_Handler	00000004 I2C1_EV_IRQHandler
2000000c g       .data	00000000 __stack_base__
20000114 g       .data	00000000 __data_end__
000009a4  w    F .text.Default_Handler	00000004 DMA1_Channel6_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 UART4_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 DMA2_Channel4_IRQHandler
00000b9c g     F .text.__sfp_lock_acquire	00000002 __sfp_lock_acquire
200001a0 g       .bss	00000000 __bss_end__
0000128c g     F .text._free_r	00000088 _free_r
000009a4  w    F .text.Default_Handler	00000004 TIM3_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 RCC_IRQHandler
00000000  w      *UND*	00000000 __call_exitprocs
000009a4  w    F .text.Default_Handler	00000004 DMA1_Channel1_IRQHandler
000009a4 g       .text.Default_Handler	00000004 Default_Handler
00000194 g     F .text	00000000 _start
00000592 g     F .text._lseek	00000004 _lseek
000009a4  w    F .text.Default_Handler	00000004 CEC_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 EXTI15_10_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 TIM14_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 TIM13_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 TIM12_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 TIM7_IRQHandler
00001030 g     F .text._close_r	00000020 _close_r
000009a4  w    F .text.Default_Handler	00000004 TIM5_IRQHandler
00000f54 g     F .text.__swsetup_r	000000dc __swsetup_r
000009a4  w    F .text.Default_Handler	00000004 EXTI9_5_IRQHandler
00000b28 g     F .text.__sfp	00000074 __sfp
00000ba2 g     F .text.__sinit_lock_release	00000002 __sinit_lock_release
00000dd8 g     F .text.__sread	00000022 __sread
00001158 g     F .text._fflush_r	00000054 _fflush_r
00001454 g       *ABS*	00000000 _start_data_flash
000009a4  w    F .text.Default_Handler	00000004 SPI2_IRQHandler
000002c8 g     O .text	00000020 __sf_fake_stdin
000003b4 g     F .text.memset	00000010 memset
000009a4  w    F .text.Default_Handler	00000004 MemManage_Handler
000009a8 g     F .text.startup	00000058 main
000007fa  w    F .text._link	00000010 _link
00000f1c g     F .text.__swbuf	00000014 __swbuf
000009a4  w    F .text.Default_Handler	00000004 SVC_Handler
00000e5a g     F .text.__sclose	00000008 __sclose
000009a4  w    F .text.Default_Handler	00000004 DMA2_Channel5_IRQHandler
00000000  w      *UND*	00000000 __init_array_end
00000c40 g     F .text._malloc_r	000000a8 _malloc_r
00000bcc g     F .text._fwalk	00000038 _fwalk
200001a4 g       .bss	00000000 __end__
000009a4  w    F .text.Default_Handler	00000004 DMA1_Channel5_IRQHandler
00000596 g     F .text._swiwrite	00000020 _swiwrite
000008f8 g     F .text._rename	00000036 _rename
000009a4  w    F .text.Default_Handler	00000004 EXTI4_IRQHandler
00000284 g     F .text	00000028 SystemInit
00000334 g     F .fini	00000000 _fini
000009a4  w    F .text.Default_Handler	00000004 TIM1_TRG_COM_TIM17_IRQHandler
00000514 g     F .text._swilseek	0000007e _swilseek
00000000  w      *UND*	00000000 atexit
00000f30 g     F .text._write_r	00000024 _write_r
000009a4  w    F .text.Default_Handler	00000004 DMA1_Channel3_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 FSMC_IRQHandler
20000180 g     O .data._impure_ptr	00000004 _impure_ptr
000005f8 g     F .text._swiclose	0000001c _swiclose
00001050 g     F .text.__sflush_r	00000106 __sflush_r
00000000  w      *UND*	00000000 __preinit_array_end
000009a4  w    F .text.Default_Handler	00000004 WWDG_IRQHandler
0000072c g     F .text._swiopen	000000bc _swiopen
00000bb8 g     F .text.__fp_unlock_all	00000014 __fp_unlock_all
0000080a g     F .text._unlink	00000028 _unlink
000009a4  w    F .text.Default_Handler	00000004 TIM2_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 EXTI1_IRQHandler
000005b6 g     F .text._write	00000042 _write
000009a4  w    F .text.Default_Handler	00000004 RTCAlarm_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 USART2_IRQHandler
00000dfe g     F .text.__swrite	00000038 __swrite
00000340 g     F .text.exit	00000028 exit
00000000 g     O .vectors	00000000 g_pfnVectors
00000c04 g     F .text._fwalk_reent	0000003c _fwalk_reent
00000938 g     F .text._kill	00000020 _kill
000009a4  w    F .text.Default_Handler	00000004 I2C2_ER_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 DMA1_Channel2_IRQHandler
00000b9e g     F .text.__sfp_lock_release	00000002 __sfp_lock_release
000002e8 g     O .text	00000020 __sf_fake_stdout
00000832 g     F .text._gettimeofday	00000026 _gettimeofday
000004e0 g     F .text._read	00000034 _read
00000000  w      *UND*	00000000 __init_array_start
000009a4  w    F .text.Default_Handler	00000004 FLASH_IRQHandler
0000092e g     F .text._exit	00000008 _exit
000009a4  w    F .text.Default_Handler	00000004 BusFault_Handler
000009a4  w    F .text.Default_Handler	00000004 USART1_IRQHandler
000011f4 g     F .text.__smakebuf_r	00000098 __smakebuf_r
00000e62 g     F .text.strlen	00000010 strlen
000009a4  w    F .text.Default_Handler	00000004 SPI3_IRQHandler
20000254 g     O .bss.__malloc_sbrk_start	00000004 __malloc_sbrk_start
000009a4  w    F .text.Default_Handler	00000004 I2C1_ER_IRQHandler
20001ffc g       .bss	00000000 __stack_end__
20000258 g     O .bss.__malloc_free_list	00000004 __malloc_free_list
00000000  w      *UND*	00000000 _Jv_RegisterClasses
200001a4 g       .bss	00000000 __stack_start__
00000000  w      *UND*	00000000 __preinit_array_start
00000000  w      *UND*	00000000 __register_frame_info
000008bc g     F .text._system	0000003c _system
000004c0 g     F .text._swiread	00000020 _swiread
00000614 g     F .text._close	00000048 _close
00000ba0 g     F .text.__sinit_lock_acquire	00000002 __sinit_lock_acquire
000009a4  w    F .text.Default_Handler	00000004 DMA2_Channel3_IRQHandler
000009a4  w    F .text.Default_Handler	00000004 TIM1_BRK_TIM15_IRQHandler



Disassembly of section .text:

00000140 <__do_global_dtors_aux>:
 140:	b510      	push	{r4, lr}
 142:	4c05      	ldr	r4, [pc, #20]	; (158 <__do_global_dtors_aux+0x18>)
 144:	7823      	ldrb	r3, [r4, #0]
 146:	b933      	cbnz	r3, 156 <__do_global_dtors_aux+0x16>
 148:	4b04      	ldr	r3, [pc, #16]	; (15c <__do_global_dtors_aux+0x1c>)
 14a:	b113      	cbz	r3, 152 <__do_global_dtors_aux+0x12>
 14c:	4804      	ldr	r0, [pc, #16]	; (160 <__do_global_dtors_aux+0x20>)
 14e:	f3af 8000 	nop.w
 152:	2301      	movs	r3, #1
 154:	7023      	strb	r3, [r4, #0]
 156:	bd10      	pop	{r4, pc}
 158:	20000184 	.word	0x20000184
 15c:	00000000 	.word	0x00000000
 160:	00000134 	.word	0x00000134

00000164 <frame_dummy>:
 164:	b508      	push	{r3, lr}
 166:	4b06      	ldr	r3, [pc, #24]	; (180 <frame_dummy+0x1c>)
 168:	b11b      	cbz	r3, 172 <frame_dummy+0xe>
 16a:	4806      	ldr	r0, [pc, #24]	; (184 <frame_dummy+0x20>)
 16c:	4906      	ldr	r1, [pc, #24]	; (188 <frame_dummy+0x24>)
 16e:	f3af 8000 	nop.w
 172:	4806      	ldr	r0, [pc, #24]	; (18c <frame_dummy+0x28>)
 174:	6803      	ldr	r3, [r0, #0]
 176:	b113      	cbz	r3, 17e <frame_dummy+0x1a>
 178:	4b05      	ldr	r3, [pc, #20]	; (190 <frame_dummy+0x2c>)
 17a:	b103      	cbz	r3, 17e <frame_dummy+0x1a>
 17c:	4798      	blx	r3
 17e:	bd08      	pop	{r3, pc}
 180:	00000000 	.word	0x00000000
 184:	00000134 	.word	0x00000134
 188:	20000188 	.word	0x20000188
 18c:	2000011c 	.word	0x2000011c
 190:	00000000 	.word	0x00000000

00000194 <_mainCRTStartup>:
 194:	2016      	movs	r0, #22
 196:	a12e      	add	r1, pc, #184	; (adr r1, 250 <_mainCRTStartup+0xbc>)
 198:	beab      	bkpt	0x00ab
 19a:	482d      	ldr	r0, [pc, #180]	; (250 <_mainCRTStartup+0xbc>)
 19c:	6801      	ldr	r1, [r0, #0]
 19e:	2900      	cmp	r1, #0
 1a0:	d101      	bne.n	1a6 <_mainCRTStartup+0x12>
 1a2:	4932      	ldr	r1, [pc, #200]	; (26c <_mainCRTStartup+0xd8>)
 1a4:	6001      	str	r1, [r0, #0]
 1a6:	6881      	ldr	r1, [r0, #8]
 1a8:	68c2      	ldr	r2, [r0, #12]
 1aa:	2900      	cmp	r1, #0
 1ac:	d000      	beq.n	1b0 <_mainCRTStartup+0x1c>
 1ae:	468d      	mov	sp, r1
 1b0:	2a00      	cmp	r2, #0
 1b2:	d001      	beq.n	1b8 <_mainCRTStartup+0x24>
 1b4:	f502 7a80 	add.w	sl, r2, #256	; 0x100
 1b8:	2100      	movs	r1, #0
 1ba:	468b      	mov	fp, r1
 1bc:	460f      	mov	r7, r1
 1be:	4825      	ldr	r0, [pc, #148]	; (254 <_mainCRTStartup+0xc0>)
 1c0:	4a25      	ldr	r2, [pc, #148]	; (258 <_mainCRTStartup+0xc4>)
 1c2:	1a12      	subs	r2, r2, r0
 1c4:	f000 f8f6 	bl	3b4 <memset>
 1c8:	f000 f92a 	bl	420 <initialise_monitor_handles>
 1cc:	2015      	movs	r0, #21
 1ce:	a125      	add	r1, pc, #148	; (adr r1, 264 <_mainCRTStartup+0xd0>)
 1d0:	beab      	bkpt	0x00ab
 1d2:	4924      	ldr	r1, [pc, #144]	; (264 <_mainCRTStartup+0xd0>)
 1d4:	2000      	movs	r0, #0
 1d6:	b401      	push	{r0}
 1d8:	780b      	ldrb	r3, [r1, #0]
 1da:	3101      	adds	r1, #1
 1dc:	2b00      	cmp	r3, #0
 1de:	d015      	beq.n	20c <_mainCRTStartup+0x78>
 1e0:	2b20      	cmp	r3, #32
 1e2:	d0f9      	beq.n	1d8 <_mainCRTStartup+0x44>
 1e4:	2b22      	cmp	r3, #34	; 0x22
 1e6:	d001      	beq.n	1ec <_mainCRTStartup+0x58>
 1e8:	2b27      	cmp	r3, #39	; 0x27
 1ea:	d101      	bne.n	1f0 <_mainCRTStartup+0x5c>
 1ec:	001a      	movs	r2, r3
 1ee:	e001      	b.n	1f4 <_mainCRTStartup+0x60>
 1f0:	2220      	movs	r2, #32
 1f2:	3901      	subs	r1, #1
 1f4:	b402      	push	{r1}
 1f6:	3001      	adds	r0, #1
 1f8:	780b      	ldrb	r3, [r1, #0]
 1fa:	3101      	adds	r1, #1
 1fc:	2b00      	cmp	r3, #0
 1fe:	d005      	beq.n	20c <_mainCRTStartup+0x78>
 200:	429a      	cmp	r2, r3
 202:	d1f9      	bne.n	1f8 <_mainCRTStartup+0x64>
 204:	2200      	movs	r2, #0
 206:	1e4b      	subs	r3, r1, #1
 208:	701a      	strb	r2, [r3, #0]
 20a:	e7e5      	b.n	1d8 <_mainCRTStartup+0x44>
 20c:	4669      	mov	r1, sp
 20e:	0002      	movs	r2, r0
 210:	0092      	lsls	r2, r2, #2
 212:	446a      	add	r2, sp
 214:	466b      	mov	r3, sp
 216:	429a      	cmp	r2, r3
 218:	d906      	bls.n	228 <_mainCRTStartup+0x94>
 21a:	3a04      	subs	r2, #4
 21c:	6814      	ldr	r4, [r2, #0]
 21e:	681d      	ldr	r5, [r3, #0]
 220:	6015      	str	r5, [r2, #0]
 222:	601c      	str	r4, [r3, #0]
 224:	3304      	adds	r3, #4
 226:	e7f6      	b.n	216 <_mainCRTStartup+0x82>
 228:	466c      	mov	r4, sp
 22a:	2507      	movs	r5, #7
 22c:	43ac      	bics	r4, r5
 22e:	46a5      	mov	sp, r4
 230:	0004      	movs	r4, r0
 232:	000d      	movs	r5, r1
 234:	4809      	ldr	r0, [pc, #36]	; (25c <_mainCRTStartup+0xc8>)
 236:	2800      	cmp	r0, #0
 238:	d002      	beq.n	240 <_mainCRTStartup+0xac>
 23a:	4809      	ldr	r0, [pc, #36]	; (260 <_mainCRTStartup+0xcc>)
 23c:	f3af 8000 	nop.w
 240:	f000 f892 	bl	368 <__libc_init_array>
 244:	0020      	movs	r0, r4
 246:	0029      	movs	r1, r5
 248:	f000 fbae 	bl	9a8 <main>
 24c:	f000 f878 	bl	340 <exit>
 250:	20000004 	.word	0x20000004
 254:	20000184 	.word	0x20000184
 258:	200001a0 	.word	0x200001a0
	...
 264:	20000014 	.word	0x20000014
 268:	000000ff 	.word	0x000000ff
 26c:	200001a4 	.word	0x200001a4
 270:	00001454 	.word	0x00001454
 274:	20000000 	.word	0x20000000
 278:	20000114 	.word	0x20000114
 27c:	20000184 	.word	0x20000184
 280:	200001a0 	.word	0x200001a0

00000284 <SystemInit>:
	volatile uint32_t	regState;

	  //Set the Clock config register to: SYSCLK=PLL, PLL Source=HSI clock, PLL is x6, MCO=PLL/2 output at MCO pin 29
	//RCC_CFGR=0x4100002; // Sets MCO to output SYSCLK, PLL x6, HSI clock as PLL source, PLL as SYSCLK source

	  RCC_CFGR=0x5000000; //MCO output of HSI clock (8MHz)
 284:	4b08      	ldr	r3, [pc, #32]	; (2a8 <SystemInit+0x24>)
 286:	f04f 62a0 	mov.w	r2, #83886080	; 0x5000000
 28a:	601a      	str	r2, [r3, #0]
	  //RCC_CFGR=0x4000000; //MCO output of SYSCLK

	regState=RCC_CR;
 28c:	f853 2c04 	ldr.w	r2, [r3, #-4]

#include "Headers/STM32F100.h"
void SystemInit(void);

void SystemInit (void)
{
 290:	b082      	sub	sp, #8
	//RCC_CFGR=0x4100002; // Sets MCO to output SYSCLK, PLL x6, HSI clock as PLL source, PLL as SYSCLK source

	  RCC_CFGR=0x5000000; //MCO output of HSI clock (8MHz)
	  //RCC_CFGR=0x4000000; //MCO output of SYSCLK

	regState=RCC_CR;
 292:	9201      	str	r2, [sp, #4]
	regState=regState | 0x1000000 ; //switch on the PLL
 294:	9a01      	ldr	r2, [sp, #4]
 296:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 29a:	9201      	str	r2, [sp, #4]
	RCC_CR=regState;
 29c:	9a01      	ldr	r2, [sp, #4]
 29e:	f843 2c04 	str.w	r2, [r3, #-4]
}
 2a2:	b002      	add	sp, #8
 2a4:	4770      	bx	lr
 2a6:	bf00      	nop
 2a8:	40021004 	.word	0x40021004
 2ac:	00000043 	.word	0x00000043

000002b0 <_global_impure_ptr>:
 2b0:	20000120 0074743a 6c6c6548 6f57206f      .. :tt.Hello Wo
 2c0:	20646c72 00000000                       rld ....

000002c8 <__sf_fake_stdin>:
	...

000002e8 <__sf_fake_stdout>:
	...

00000308 <__sf_fake_stderr>:
	...

Disassembly of section .init:

00000328 <_init>:
 328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 32a:	bf00      	nop
 32c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 32e:	bc08      	pop	{r3}
 330:	469e      	mov	lr, r3
 332:	4770      	bx	lr

Disassembly of section .fini:

00000334 <_fini>:
 334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 336:	bf00      	nop
 338:	bcf8      	pop	{r3, r4, r5, r6, r7}
 33a:	bc08      	pop	{r3}
 33c:	469e      	mov	lr, r3
 33e:	4770      	bx	lr

Disassembly of section .text.exit:

00000340 <exit>:
 340:	b508      	push	{r3, lr}
 342:	4b07      	ldr	r3, [pc, #28]	; (360 <exit+0x20>)
 344:	4604      	mov	r4, r0
 346:	b113      	cbz	r3, 34e <exit+0xe>
 348:	2100      	movs	r1, #0
 34a:	f3af 8000 	nop.w
 34e:	4b05      	ldr	r3, [pc, #20]	; (364 <exit+0x24>)
 350:	6818      	ldr	r0, [r3, #0]
 352:	6a83      	ldr	r3, [r0, #40]	; 0x28
 354:	b103      	cbz	r3, 358 <exit+0x18>
 356:	4798      	blx	r3
 358:	4620      	mov	r0, r4
 35a:	f000 fae8 	bl	92e <_exit>
 35e:	bf00      	nop
 360:	00000000 	.word	0x00000000
 364:	000002b0 	.word	0x000002b0

Disassembly of section .text.__libc_init_array:

00000368 <__libc_init_array>:
 368:	b570      	push	{r4, r5, r6, lr}
 36a:	4b0e      	ldr	r3, [pc, #56]	; (3a4 <__libc_init_array+0x3c>)
 36c:	4d0e      	ldr	r5, [pc, #56]	; (3a8 <__libc_init_array+0x40>)
 36e:	2400      	movs	r4, #0
 370:	1aed      	subs	r5, r5, r3
 372:	10ad      	asrs	r5, r5, #2
 374:	461e      	mov	r6, r3
 376:	42ac      	cmp	r4, r5
 378:	d004      	beq.n	384 <__libc_init_array+0x1c>
 37a:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 37e:	4790      	blx	r2
 380:	3401      	adds	r4, #1
 382:	e7f8      	b.n	376 <__libc_init_array+0xe>
 384:	f7ff ffd0 	bl	328 <_init>
 388:	4d08      	ldr	r5, [pc, #32]	; (3ac <__libc_init_array+0x44>)
 38a:	4b09      	ldr	r3, [pc, #36]	; (3b0 <__libc_init_array+0x48>)
 38c:	2400      	movs	r4, #0
 38e:	1aed      	subs	r5, r5, r3
 390:	10ad      	asrs	r5, r5, #2
 392:	461e      	mov	r6, r3
 394:	42ac      	cmp	r4, r5
 396:	d004      	beq.n	3a2 <__libc_init_array+0x3a>
 398:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 39c:	4790      	blx	r2
 39e:	3401      	adds	r4, #1
 3a0:	e7f8      	b.n	394 <__libc_init_array+0x2c>
 3a2:	bd70      	pop	{r4, r5, r6, pc}
	...

Disassembly of section .text.memset:

000003b4 <memset>:
 3b4:	4402      	add	r2, r0
 3b6:	4603      	mov	r3, r0
 3b8:	4293      	cmp	r3, r2
 3ba:	d002      	beq.n	3c2 <memset+0xe>
 3bc:	f803 1b01 	strb.w	r1, [r3], #1
 3c0:	e7fa      	b.n	3b8 <memset+0x4>
 3c2:	4770      	bx	lr

Disassembly of section .text.findslot:

000003c4 <findslot>:
 3c4:	4b0a      	ldr	r3, [pc, #40]	; (3f0 <findslot+0x2c>)
 3c6:	b510      	push	{r4, lr}
 3c8:	4604      	mov	r4, r0
 3ca:	6818      	ldr	r0, [r3, #0]
 3cc:	b118      	cbz	r0, 3d6 <findslot+0x12>
 3ce:	6983      	ldr	r3, [r0, #24]
 3d0:	b90b      	cbnz	r3, 3d6 <findslot+0x12>
 3d2:	f000 fb79 	bl	ac8 <__sinit>
 3d6:	2c13      	cmp	r4, #19
 3d8:	d807      	bhi.n	3ea <findslot+0x26>
 3da:	4806      	ldr	r0, [pc, #24]	; (3f4 <findslot+0x30>)
 3dc:	f850 3034 	ldr.w	r3, [r0, r4, lsl #3]
 3e0:	3301      	adds	r3, #1
 3e2:	d002      	beq.n	3ea <findslot+0x26>
 3e4:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 3e8:	bd10      	pop	{r4, pc}
 3ea:	2000      	movs	r0, #0
 3ec:	bd10      	pop	{r4, pc}
 3ee:	bf00      	nop
 3f0:	20000180 	.word	0x20000180
 3f4:	200001b4 	.word	0x200001b4

Disassembly of section .text.error:

000003f8 <error>:
 3f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 3fa:	4604      	mov	r4, r0
 3fc:	f000 fb00 	bl	a00 <__errno>
 400:	2700      	movs	r7, #0
 402:	4605      	mov	r5, r0
 404:	2613      	movs	r6, #19
 406:	4630      	mov	r0, r6
 408:	4639      	mov	r1, r7
 40a:	beab      	bkpt	0x00ab
 40c:	4606      	mov	r6, r0
 40e:	602e      	str	r6, [r5, #0]
 410:	4620      	mov	r0, r4
 412:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.checkerror:

00000414 <checkerror>:
 414:	1c43      	adds	r3, r0, #1
 416:	d101      	bne.n	41c <checkerror+0x8>
 418:	f7ff bfee 	b.w	3f8 <error>
 41c:	4770      	bx	lr

Disassembly of section .text.initialise_monitor_handles:

00000420 <initialise_monitor_handles>:
 420:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 422:	4c22      	ldr	r4, [pc, #136]	; (4ac <initialise_monitor_handles+0x8c>)
 424:	2303      	movs	r3, #3
 426:	9401      	str	r4, [sp, #4]
 428:	9303      	str	r3, [sp, #12]
 42a:	2300      	movs	r3, #0
 42c:	9302      	str	r3, [sp, #8]
 42e:	ae01      	add	r6, sp, #4
 430:	2501      	movs	r5, #1
 432:	4628      	mov	r0, r5
 434:	4631      	mov	r1, r6
 436:	beab      	bkpt	0x00ab
 438:	4605      	mov	r5, r0
 43a:	4b1d      	ldr	r3, [pc, #116]	; (4b0 <initialise_monitor_handles+0x90>)
 43c:	9401      	str	r4, [sp, #4]
 43e:	601d      	str	r5, [r3, #0]
 440:	2303      	movs	r3, #3
 442:	9303      	str	r3, [sp, #12]
 444:	2304      	movs	r3, #4
 446:	9302      	str	r3, [sp, #8]
 448:	eb0d 0603 	add.w	r6, sp, r3
 44c:	2501      	movs	r5, #1
 44e:	4628      	mov	r0, r5
 450:	4631      	mov	r1, r6
 452:	beab      	bkpt	0x00ab
 454:	4605      	mov	r5, r0
 456:	4b17      	ldr	r3, [pc, #92]	; (4b4 <initialise_monitor_handles+0x94>)
 458:	9401      	str	r4, [sp, #4]
 45a:	601d      	str	r5, [r3, #0]
 45c:	2303      	movs	r3, #3
 45e:	9303      	str	r3, [sp, #12]
 460:	2308      	movs	r3, #8
 462:	9302      	str	r3, [sp, #8]
 464:	ad01      	add	r5, sp, #4
 466:	2401      	movs	r4, #1
 468:	4620      	mov	r0, r4
 46a:	4629      	mov	r1, r5
 46c:	beab      	bkpt	0x00ab
 46e:	4604      	mov	r4, r0
 470:	4911      	ldr	r1, [pc, #68]	; (4b8 <initialise_monitor_handles+0x98>)
 472:	4810      	ldr	r0, [pc, #64]	; (4b4 <initialise_monitor_handles+0x94>)
 474:	600c      	str	r4, [r1, #0]
 476:	3401      	adds	r4, #1
 478:	bf08      	it	eq
 47a:	6803      	ldreq	r3, [r0, #0]
 47c:	f04f 0200 	mov.w	r2, #0
 480:	bf08      	it	eq
 482:	600b      	streq	r3, [r1, #0]
 484:	4b0d      	ldr	r3, [pc, #52]	; (4bc <initialise_monitor_handles+0x9c>)
 486:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 48a:	50d4      	str	r4, [r2, r3]
 48c:	3208      	adds	r2, #8
 48e:	2aa0      	cmp	r2, #160	; 0xa0
 490:	d1f8      	bne.n	484 <initialise_monitor_handles+0x64>
 492:	4a07      	ldr	r2, [pc, #28]	; (4b0 <initialise_monitor_handles+0x90>)
 494:	6800      	ldr	r0, [r0, #0]
 496:	6812      	ldr	r2, [r2, #0]
 498:	6809      	ldr	r1, [r1, #0]
 49a:	601a      	str	r2, [r3, #0]
 49c:	2200      	movs	r2, #0
 49e:	605a      	str	r2, [r3, #4]
 4a0:	6098      	str	r0, [r3, #8]
 4a2:	60da      	str	r2, [r3, #12]
 4a4:	6119      	str	r1, [r3, #16]
 4a6:	615a      	str	r2, [r3, #20]
 4a8:	b004      	add	sp, #16
 4aa:	bd70      	pop	{r4, r5, r6, pc}
 4ac:	000002b4 	.word	0x000002b4
 4b0:	200001a8 	.word	0x200001a8
 4b4:	200001a4 	.word	0x200001a4
 4b8:	200001ac 	.word	0x200001ac
 4bc:	200001b4 	.word	0x200001b4

Disassembly of section .text._swiread:

000004c0 <_swiread>:
 4c0:	b530      	push	{r4, r5, lr}
 4c2:	b085      	sub	sp, #20
 4c4:	9001      	str	r0, [sp, #4]
 4c6:	9102      	str	r1, [sp, #8]
 4c8:	9203      	str	r2, [sp, #12]
 4ca:	ad01      	add	r5, sp, #4
 4cc:	2406      	movs	r4, #6
 4ce:	4620      	mov	r0, r4
 4d0:	4629      	mov	r1, r5
 4d2:	beab      	bkpt	0x00ab
 4d4:	4604      	mov	r4, r0
 4d6:	4620      	mov	r0, r4
 4d8:	f7ff ff9c 	bl	414 <checkerror>
 4dc:	b005      	add	sp, #20
 4de:	bd30      	pop	{r4, r5, pc}

Disassembly of section .text._read:

000004e0 <_read>:
 4e0:	b570      	push	{r4, r5, r6, lr}
 4e2:	460e      	mov	r6, r1
 4e4:	4615      	mov	r5, r2
 4e6:	f7ff ff6d 	bl	3c4 <findslot>
 4ea:	4604      	mov	r4, r0
 4ec:	b930      	cbnz	r0, 4fc <_read+0x1c>
 4ee:	f000 fa87 	bl	a00 <__errno>
 4f2:	2309      	movs	r3, #9
 4f4:	6003      	str	r3, [r0, #0]
 4f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 4fa:	bd70      	pop	{r4, r5, r6, pc}
 4fc:	6800      	ldr	r0, [r0, #0]
 4fe:	4631      	mov	r1, r6
 500:	462a      	mov	r2, r5
 502:	f7ff ffdd 	bl	4c0 <_swiread>
 506:	1c43      	adds	r3, r0, #1
 508:	d003      	beq.n	512 <_read+0x32>
 50a:	6863      	ldr	r3, [r4, #4]
 50c:	1a28      	subs	r0, r5, r0
 50e:	4403      	add	r3, r0
 510:	6063      	str	r3, [r4, #4]
 512:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._swilseek:

00000514 <_swilseek>:
 514:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 516:	460c      	mov	r4, r1
 518:	4616      	mov	r6, r2
 51a:	f7ff ff53 	bl	3c4 <findslot>
 51e:	4605      	mov	r5, r0
 520:	b918      	cbnz	r0, 52a <_swilseek+0x16>
 522:	f000 fa6d 	bl	a00 <__errno>
 526:	2309      	movs	r3, #9
 528:	e004      	b.n	534 <_swilseek+0x20>
 52a:	2e02      	cmp	r6, #2
 52c:	d904      	bls.n	538 <_swilseek+0x24>
 52e:	f000 fa67 	bl	a00 <__errno>
 532:	2316      	movs	r3, #22
 534:	6003      	str	r3, [r0, #0]
 536:	e017      	b.n	568 <_swilseek+0x54>
 538:	2e01      	cmp	r6, #1
 53a:	d103      	bne.n	544 <_swilseek+0x30>
 53c:	6843      	ldr	r3, [r0, #4]
 53e:	18e4      	adds	r4, r4, r3
 540:	d515      	bpl.n	56e <_swilseek+0x5a>
 542:	e7f4      	b.n	52e <_swilseek+0x1a>
 544:	2e02      	cmp	r6, #2
 546:	d112      	bne.n	56e <_swilseek+0x5a>
 548:	6803      	ldr	r3, [r0, #0]
 54a:	ae02      	add	r6, sp, #8
 54c:	f846 3d08 	str.w	r3, [r6, #-8]!
 550:	270c      	movs	r7, #12
 552:	4638      	mov	r0, r7
 554:	4631      	mov	r1, r6
 556:	beab      	bkpt	0x00ab
 558:	4606      	mov	r6, r0
 55a:	4630      	mov	r0, r6
 55c:	f7ff ff5a 	bl	414 <checkerror>
 560:	1c43      	adds	r3, r0, #1
 562:	bf18      	it	ne
 564:	1824      	addne	r4, r4, r0
 566:	d102      	bne.n	56e <_swilseek+0x5a>
 568:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 56c:	e00f      	b.n	58e <_swilseek+0x7a>
 56e:	682b      	ldr	r3, [r5, #0]
 570:	466f      	mov	r7, sp
 572:	e88d 0018 	stmia.w	sp, {r3, r4}
 576:	260a      	movs	r6, #10
 578:	4630      	mov	r0, r6
 57a:	4639      	mov	r1, r7
 57c:	beab      	bkpt	0x00ab
 57e:	4606      	mov	r6, r0
 580:	4630      	mov	r0, r6
 582:	f7ff ff47 	bl	414 <checkerror>
 586:	2800      	cmp	r0, #0
 588:	dbee      	blt.n	568 <_swilseek+0x54>
 58a:	606c      	str	r4, [r5, #4]
 58c:	4620      	mov	r0, r4
 58e:	b003      	add	sp, #12
 590:	bdf0      	pop	{r4, r5, r6, r7, pc}

Disassembly of section .text._lseek:

00000592 <_lseek>:
 592:	f7ff bfbf 	b.w	514 <_swilseek>

Disassembly of section .text._swiwrite:

00000596 <_swiwrite>:
 596:	b530      	push	{r4, r5, lr}
 598:	b085      	sub	sp, #20
 59a:	9001      	str	r0, [sp, #4]
 59c:	9102      	str	r1, [sp, #8]
 59e:	9203      	str	r2, [sp, #12]
 5a0:	ad01      	add	r5, sp, #4
 5a2:	2405      	movs	r4, #5
 5a4:	4620      	mov	r0, r4
 5a6:	4629      	mov	r1, r5
 5a8:	beab      	bkpt	0x00ab
 5aa:	4604      	mov	r4, r0
 5ac:	4620      	mov	r0, r4
 5ae:	f7ff ff31 	bl	414 <checkerror>
 5b2:	b005      	add	sp, #20
 5b4:	bd30      	pop	{r4, r5, pc}

Disassembly of section .text._write:

000005b6 <_write>:
 5b6:	b570      	push	{r4, r5, r6, lr}
 5b8:	460e      	mov	r6, r1
 5ba:	4615      	mov	r5, r2
 5bc:	f7ff ff02 	bl	3c4 <findslot>
 5c0:	4604      	mov	r4, r0
 5c2:	b920      	cbnz	r0, 5ce <_write+0x18>
 5c4:	f000 fa1c 	bl	a00 <__errno>
 5c8:	2309      	movs	r3, #9
 5ca:	6003      	str	r3, [r0, #0]
 5cc:	e011      	b.n	5f2 <_write+0x3c>
 5ce:	6800      	ldr	r0, [r0, #0]
 5d0:	4631      	mov	r1, r6
 5d2:	462a      	mov	r2, r5
 5d4:	f7ff ffdf 	bl	596 <_swiwrite>
 5d8:	1e03      	subs	r3, r0, #0
 5da:	db0a      	blt.n	5f2 <_write+0x3c>
 5dc:	6862      	ldr	r2, [r4, #4]
 5de:	1ae8      	subs	r0, r5, r3
 5e0:	4402      	add	r2, r0
 5e2:	429d      	cmp	r5, r3
 5e4:	6062      	str	r2, [r4, #4]
 5e6:	d106      	bne.n	5f6 <_write+0x40>
 5e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 5ec:	2000      	movs	r0, #0
 5ee:	f7ff bf03 	b.w	3f8 <error>
 5f2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 5f6:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._swiclose:

000005f8 <_swiclose>:
 5f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 5fa:	ac02      	add	r4, sp, #8
 5fc:	f844 0d04 	str.w	r0, [r4, #-4]!
 600:	2502      	movs	r5, #2
 602:	4628      	mov	r0, r5
 604:	4621      	mov	r1, r4
 606:	beab      	bkpt	0x00ab
 608:	4604      	mov	r4, r0
 60a:	4620      	mov	r0, r4
 60c:	f7ff ff02 	bl	414 <checkerror>
 610:	b003      	add	sp, #12
 612:	bd30      	pop	{r4, r5, pc}

Disassembly of section .text._close:

00000614 <_close>:
 614:	b538      	push	{r3, r4, r5, lr}
 616:	4605      	mov	r5, r0
 618:	f7ff fed4 	bl	3c4 <findslot>
 61c:	4604      	mov	r4, r0
 61e:	b930      	cbnz	r0, 62e <_close+0x1a>
 620:	f000 f9ee 	bl	a00 <__errno>
 624:	2309      	movs	r3, #9
 626:	6003      	str	r3, [r0, #0]
 628:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 62c:	bd38      	pop	{r3, r4, r5, pc}
 62e:	3d01      	subs	r5, #1
 630:	2d01      	cmp	r5, #1
 632:	d809      	bhi.n	648 <_close+0x34>
 634:	4b08      	ldr	r3, [pc, #32]	; (658 <_close+0x44>)
 636:	689a      	ldr	r2, [r3, #8]
 638:	691b      	ldr	r3, [r3, #16]
 63a:	429a      	cmp	r2, r3
 63c:	d104      	bne.n	648 <_close+0x34>
 63e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 642:	6003      	str	r3, [r0, #0]
 644:	2000      	movs	r0, #0
 646:	bd38      	pop	{r3, r4, r5, pc}
 648:	6820      	ldr	r0, [r4, #0]
 64a:	f7ff ffd5 	bl	5f8 <_swiclose>
 64e:	b910      	cbnz	r0, 656 <_close+0x42>
 650:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 654:	6023      	str	r3, [r4, #0]
 656:	bd38      	pop	{r3, r4, r5, pc}
 658:	200001b4 	.word	0x200001b4

Disassembly of section .text._getpid:

0000065c <_getpid>:
 65c:	2001      	movs	r0, #1
 65e:	4770      	bx	lr

Disassembly of section .text._sbrk:

00000660 <_sbrk>:
 660:	b508      	push	{r3, lr}
 662:	4b0a      	ldr	r3, [pc, #40]	; (68c <_sbrk+0x2c>)
 664:	681a      	ldr	r2, [r3, #0]
 666:	b90a      	cbnz	r2, 66c <_sbrk+0xc>
 668:	4a09      	ldr	r2, [pc, #36]	; (690 <_sbrk+0x30>)
 66a:	601a      	str	r2, [r3, #0]
 66c:	681b      	ldr	r3, [r3, #0]
 66e:	466a      	mov	r2, sp
 670:	4418      	add	r0, r3
 672:	4290      	cmp	r0, r2
 674:	d906      	bls.n	684 <_sbrk+0x24>
 676:	f000 f9c3 	bl	a00 <__errno>
 67a:	230c      	movs	r3, #12
 67c:	6003      	str	r3, [r0, #0]
 67e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 682:	bd08      	pop	{r3, pc}
 684:	4a01      	ldr	r2, [pc, #4]	; (68c <_sbrk+0x2c>)
 686:	6010      	str	r0, [r2, #0]
 688:	4618      	mov	r0, r3
 68a:	bd08      	pop	{r3, pc}
 68c:	200001b0 	.word	0x200001b0
 690:	200001a4 	.word	0x200001a4

Disassembly of section .text._swistat:

00000694 <_swistat>:
 694:	b570      	push	{r4, r5, r6, lr}
 696:	460c      	mov	r4, r1
 698:	f7ff fe94 	bl	3c4 <findslot>
 69c:	4605      	mov	r5, r0
 69e:	b930      	cbnz	r0, 6ae <_swistat+0x1a>
 6a0:	f000 f9ae 	bl	a00 <__errno>
 6a4:	2309      	movs	r3, #9
 6a6:	6003      	str	r3, [r0, #0]
 6a8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 6ac:	bd70      	pop	{r4, r5, r6, pc}
 6ae:	6863      	ldr	r3, [r4, #4]
 6b0:	260c      	movs	r6, #12
 6b2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 6b6:	6063      	str	r3, [r4, #4]
 6b8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 6bc:	62e3      	str	r3, [r4, #44]	; 0x2c
 6be:	4630      	mov	r0, r6
 6c0:	4629      	mov	r1, r5
 6c2:	beab      	bkpt	0x00ab
 6c4:	4605      	mov	r5, r0
 6c6:	4628      	mov	r0, r5
 6c8:	f7ff fea4 	bl	414 <checkerror>
 6cc:	1c43      	adds	r3, r0, #1
 6ce:	bf1c      	itt	ne
 6d0:	6120      	strne	r0, [r4, #16]
 6d2:	2000      	movne	r0, #0
 6d4:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._fstat:

000006d6 <_fstat>:
 6d6:	b538      	push	{r3, r4, r5, lr}
 6d8:	223c      	movs	r2, #60	; 0x3c
 6da:	4605      	mov	r5, r0
 6dc:	460c      	mov	r4, r1
 6de:	4608      	mov	r0, r1
 6e0:	2100      	movs	r1, #0
 6e2:	f7ff fe67 	bl	3b4 <memset>
 6e6:	4628      	mov	r0, r5
 6e8:	4621      	mov	r1, r4
 6ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 6ee:	f7ff bfd1 	b.w	694 <_swistat>

Disassembly of section .text._stat:

000006f2 <_stat>:
 6f2:	b538      	push	{r3, r4, r5, lr}
 6f4:	223c      	movs	r2, #60	; 0x3c
 6f6:	4605      	mov	r5, r0
 6f8:	460c      	mov	r4, r1
 6fa:	4608      	mov	r0, r1
 6fc:	2100      	movs	r1, #0
 6fe:	f7ff fe59 	bl	3b4 <memset>
 702:	4628      	mov	r0, r5
 704:	2100      	movs	r1, #0
 706:	f000 f811 	bl	72c <_swiopen>
 70a:	1c43      	adds	r3, r0, #1
 70c:	4605      	mov	r5, r0
 70e:	d00b      	beq.n	728 <_stat+0x36>
 710:	6863      	ldr	r3, [r4, #4]
 712:	4621      	mov	r1, r4
 714:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 718:	6063      	str	r3, [r4, #4]
 71a:	f7ff ffbb 	bl	694 <_swistat>
 71e:	4604      	mov	r4, r0
 720:	4628      	mov	r0, r5
 722:	f7ff ff77 	bl	614 <_close>
 726:	4625      	mov	r5, r4
 728:	4628      	mov	r0, r5
 72a:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text._swiopen:

0000072c <_swiopen>:
 72c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 730:	4607      	mov	r7, r0
 732:	b090      	sub	sp, #64	; 0x40
 734:	460e      	mov	r6, r1
 736:	2400      	movs	r4, #0
 738:	4b2a      	ldr	r3, [pc, #168]	; (7e4 <_swiopen+0xb8>)
 73a:	ea4f 09c4 	mov.w	r9, r4, lsl #3
 73e:	f853 5034 	ldr.w	r5, [r3, r4, lsl #3]
 742:	4698      	mov	r8, r3
 744:	1c69      	adds	r1, r5, #1
 746:	d009      	beq.n	75c <_swiopen+0x30>
 748:	3401      	adds	r4, #1
 74a:	2c14      	cmp	r4, #20
 74c:	d1f4      	bne.n	738 <_swiopen+0xc>
 74e:	f000 f957 	bl	a00 <__errno>
 752:	2318      	movs	r3, #24
 754:	6003      	str	r3, [r0, #0]
 756:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 75a:	e03e      	b.n	7da <_swiopen+0xae>
 75c:	f406 6320 	and.w	r3, r6, #2560	; 0xa00
 760:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 764:	f10d 0a04 	add.w	sl, sp, #4
 768:	d10a      	bne.n	780 <_swiopen+0x54>
 76a:	4638      	mov	r0, r7
 76c:	4651      	mov	r1, sl
 76e:	f7ff ffc0 	bl	6f2 <_stat>
 772:	3001      	adds	r0, #1
 774:	d004      	beq.n	780 <_swiopen+0x54>
 776:	f000 f943 	bl	a00 <__errno>
 77a:	2311      	movs	r3, #17
 77c:	6003      	str	r3, [r0, #0]
 77e:	e02c      	b.n	7da <_swiopen+0xae>
 780:	f240 6301 	movw	r3, #1537	; 0x601
 784:	f3c6 4500 	ubfx	r5, r6, #16, #1
 788:	07b2      	lsls	r2, r6, #30
 78a:	ea06 0303 	and.w	r3, r6, r3
 78e:	bf48      	it	mi
 790:	f045 0502 	orrmi.w	r5, r5, #2
 794:	b10b      	cbz	r3, 79a <_swiopen+0x6e>
 796:	f045 0504 	orr.w	r5, r5, #4
 79a:	0733      	lsls	r3, r6, #28
 79c:	bf48      	it	mi
 79e:	f025 0504 	bicmi.w	r5, r5, #4
 7a2:	4638      	mov	r0, r7
 7a4:	bf48      	it	mi
 7a6:	f045 0508 	orrmi.w	r5, r5, #8
 7aa:	9701      	str	r7, [sp, #4]
 7ac:	f000 fb59 	bl	e62 <strlen>
 7b0:	9502      	str	r5, [sp, #8]
 7b2:	9003      	str	r0, [sp, #12]
 7b4:	2501      	movs	r5, #1
 7b6:	4628      	mov	r0, r5
 7b8:	4651      	mov	r1, sl
 7ba:	beab      	bkpt	0x00ab
 7bc:	4605      	mov	r5, r0
 7be:	2d00      	cmp	r5, #0
 7c0:	db07      	blt.n	7d2 <_swiopen+0xa6>
 7c2:	eb08 0309 	add.w	r3, r8, r9
 7c6:	2200      	movs	r2, #0
 7c8:	f848 5034 	str.w	r5, [r8, r4, lsl #3]
 7cc:	605a      	str	r2, [r3, #4]
 7ce:	4625      	mov	r5, r4
 7d0:	e003      	b.n	7da <_swiopen+0xae>
 7d2:	4628      	mov	r0, r5
 7d4:	f7ff fe10 	bl	3f8 <error>
 7d8:	4605      	mov	r5, r0
 7da:	4628      	mov	r0, r5
 7dc:	b010      	add	sp, #64	; 0x40
 7de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 7e2:	bf00      	nop
 7e4:	200001b4 	.word	0x200001b4

Disassembly of section .text._open:

000007e8 <_open>:
 7e8:	b40e      	push	{r1, r2, r3}
 7ea:	b500      	push	{lr}
 7ec:	9901      	ldr	r1, [sp, #4]
 7ee:	f7ff ff9d 	bl	72c <_swiopen>
 7f2:	f85d eb04 	ldr.w	lr, [sp], #4
 7f6:	b003      	add	sp, #12
 7f8:	4770      	bx	lr

Disassembly of section .text._link:

000007fa <_link>:
 7fa:	b508      	push	{r3, lr}
 7fc:	f000 f900 	bl	a00 <__errno>
 800:	2358      	movs	r3, #88	; 0x58
 802:	6003      	str	r3, [r0, #0]
 804:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 808:	bd08      	pop	{r3, pc}

Disassembly of section .text._unlink:

0000080a <_unlink>:
 80a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80c:	9000      	str	r0, [sp, #0]
 80e:	f000 fb28 	bl	e62 <strlen>
 812:	240e      	movs	r4, #14
 814:	9001      	str	r0, [sp, #4]
 816:	466d      	mov	r5, sp
 818:	4620      	mov	r0, r4
 81a:	4629      	mov	r1, r5
 81c:	beab      	bkpt	0x00ab
 81e:	4604      	mov	r4, r0
 820:	1c63      	adds	r3, r4, #1
 822:	d103      	bne.n	82c <_unlink+0x22>
 824:	4620      	mov	r0, r4
 826:	f7ff fde7 	bl	3f8 <error>
 82a:	e000      	b.n	82e <_unlink+0x24>
 82c:	2000      	movs	r0, #0
 82e:	b003      	add	sp, #12
 830:	bd30      	pop	{r4, r5, pc}

Disassembly of section .text._gettimeofday:

00000832 <_gettimeofday>:
 832:	b5f0      	push	{r4, r5, r6, r7, lr}
 834:	460c      	mov	r4, r1
 836:	4605      	mov	r5, r0
 838:	b140      	cbz	r0, 84c <_gettimeofday+0x1a>
 83a:	2700      	movs	r7, #0
 83c:	2611      	movs	r6, #17
 83e:	4630      	mov	r0, r6
 840:	4639      	mov	r1, r7
 842:	beab      	bkpt	0x00ab
 844:	4606      	mov	r6, r0
 846:	2300      	movs	r3, #0
 848:	602e      	str	r6, [r5, #0]
 84a:	606b      	str	r3, [r5, #4]
 84c:	b114      	cbz	r4, 854 <_gettimeofday+0x22>
 84e:	2300      	movs	r3, #0
 850:	6023      	str	r3, [r4, #0]
 852:	6063      	str	r3, [r4, #4]
 854:	2000      	movs	r0, #0
 856:	bdf0      	pop	{r4, r5, r6, r7, pc}

Disassembly of section .text._clock:

00000858 <_clock>:
 858:	b530      	push	{r4, r5, lr}
 85a:	2500      	movs	r5, #0
 85c:	2410      	movs	r4, #16
 85e:	4620      	mov	r0, r4
 860:	4629      	mov	r1, r5
 862:	beab      	bkpt	0x00ab
 864:	4604      	mov	r4, r0
 866:	4620      	mov	r0, r4
 868:	bd30      	pop	{r4, r5, pc}

Disassembly of section .text._times:

0000086a <_times>:
 86a:	b510      	push	{r4, lr}
 86c:	4604      	mov	r4, r0
 86e:	f7ff fff3 	bl	858 <_clock>
 872:	b124      	cbz	r4, 87e <_times+0x14>
 874:	2300      	movs	r3, #0
 876:	6020      	str	r0, [r4, #0]
 878:	6063      	str	r3, [r4, #4]
 87a:	60a3      	str	r3, [r4, #8]
 87c:	60e3      	str	r3, [r4, #12]
 87e:	bd10      	pop	{r4, pc}

Disassembly of section .text._isatty:

00000880 <_isatty>:
 880:	b570      	push	{r4, r5, r6, lr}
 882:	f7ff fd9f 	bl	3c4 <findslot>
 886:	2509      	movs	r5, #9
 888:	4604      	mov	r4, r0
 88a:	b918      	cbnz	r0, 894 <_isatty+0x14>
 88c:	f000 f8b8 	bl	a00 <__errno>
 890:	6005      	str	r5, [r0, #0]
 892:	e011      	b.n	8b8 <_isatty+0x38>
 894:	4628      	mov	r0, r5
 896:	4621      	mov	r1, r4
 898:	beab      	bkpt	0x00ab
 89a:	4604      	mov	r4, r0
 89c:	2c01      	cmp	r4, #1
 89e:	d00b      	beq.n	8b8 <_isatty+0x38>
 8a0:	f000 f8ae 	bl	a00 <__errno>
 8a4:	2600      	movs	r6, #0
 8a6:	4604      	mov	r4, r0
 8a8:	2513      	movs	r5, #19
 8aa:	4628      	mov	r0, r5
 8ac:	4631      	mov	r1, r6
 8ae:	beab      	bkpt	0x00ab
 8b0:	4605      	mov	r5, r0
 8b2:	2000      	movs	r0, #0
 8b4:	6025      	str	r5, [r4, #0]
 8b6:	bd70      	pop	{r4, r5, r6, pc}
 8b8:	4620      	mov	r0, r4
 8ba:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._system:

000008bc <_system>:
 8bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8be:	b1b0      	cbz	r0, 8ee <_system+0x32>
 8c0:	9000      	str	r0, [sp, #0]
 8c2:	f000 face 	bl	e62 <strlen>
 8c6:	2412      	movs	r4, #18
 8c8:	9001      	str	r0, [sp, #4]
 8ca:	466d      	mov	r5, sp
 8cc:	4620      	mov	r0, r4
 8ce:	4629      	mov	r1, r5
 8d0:	beab      	bkpt	0x00ab
 8d2:	4604      	mov	r4, r0
 8d4:	4620      	mov	r0, r4
 8d6:	f7ff fd9d 	bl	414 <checkerror>
 8da:	28ff      	cmp	r0, #255	; 0xff
 8dc:	d80a      	bhi.n	8f4 <_system+0x38>
 8de:	4603      	mov	r3, r0
 8e0:	b13b      	cbz	r3, 8f2 <_system+0x36>
 8e2:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8e6:	4282      	cmp	r2, r0
 8e8:	d003      	beq.n	8f2 <_system+0x36>
 8ea:	005b      	lsls	r3, r3, #1
 8ec:	e7f8      	b.n	8e0 <_system+0x24>
 8ee:	2001      	movs	r0, #1
 8f0:	e000      	b.n	8f4 <_system+0x38>
 8f2:	4618      	mov	r0, r3
 8f4:	b003      	add	sp, #12
 8f6:	bd30      	pop	{r4, r5, pc}

Disassembly of section .text._rename:

000008f8 <_rename>:
 8f8:	b530      	push	{r4, r5, lr}
 8fa:	b085      	sub	sp, #20
 8fc:	460c      	mov	r4, r1
 8fe:	9000      	str	r0, [sp, #0]
 900:	f000 faaf 	bl	e62 <strlen>
 904:	9001      	str	r0, [sp, #4]
 906:	4620      	mov	r0, r4
 908:	9402      	str	r4, [sp, #8]
 90a:	f000 faaa 	bl	e62 <strlen>
 90e:	240f      	movs	r4, #15
 910:	9003      	str	r0, [sp, #12]
 912:	466d      	mov	r5, sp
 914:	4620      	mov	r0, r4
 916:	4629      	mov	r1, r5
 918:	beab      	bkpt	0x00ab
 91a:	4604      	mov	r4, r0
 91c:	4620      	mov	r0, r4
 91e:	f7ff fd79 	bl	414 <checkerror>
 922:	3000      	adds	r0, #0
 924:	bf18      	it	ne
 926:	2001      	movne	r0, #1
 928:	4240      	negs	r0, r0
 92a:	b005      	add	sp, #20
 92c:	bd30      	pop	{r4, r5, pc}

Disassembly of section .text._exit:

0000092e <_exit>:
 92e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 932:	f000 b801 	b.w	938 <_kill>

Disassembly of section .text._kill:

00000938 <_kill>:
 938:	2906      	cmp	r1, #6
 93a:	b530      	push	{r4, r5, lr}
 93c:	bf0c      	ite	eq
 93e:	4d04      	ldreq	r5, [pc, #16]	; (950 <_kill+0x18>)
 940:	4d04      	ldrne	r5, [pc, #16]	; (954 <_kill+0x1c>)
 942:	2418      	movs	r4, #24
 944:	4620      	mov	r0, r4
 946:	4629      	mov	r1, r5
 948:	beab      	bkpt	0x00ab
 94a:	4604      	mov	r4, r0
 94c:	4620      	mov	r0, r4
 94e:	bd30      	pop	{r4, r5, pc}
 950:	00020023 	.word	0x00020023
 954:	00020026 	.word	0x00020026

Disassembly of section .text.Reset_Handler:

00000958 <Reset_Handler>:
 958:	2100      	movs	r1, #0
 95a:	f000 b804 	b.w	966 <LoopCopyDataInit>

0000095e <CopyDataInit>:
 95e:	4b0c      	ldr	r3, [pc, #48]	; (990 <LoopFillZerobss+0x12>)
 960:	585b      	ldr	r3, [r3, r1]
 962:	5043      	str	r3, [r0, r1]
 964:	3104      	adds	r1, #4

00000966 <LoopCopyDataInit>:
 966:	480b      	ldr	r0, [pc, #44]	; (994 <LoopFillZerobss+0x16>)
 968:	4b0b      	ldr	r3, [pc, #44]	; (998 <LoopFillZerobss+0x1a>)
 96a:	1842      	adds	r2, r0, r1
 96c:	429a      	cmp	r2, r3
 96e:	f4ff aff6 	bcc.w	95e <CopyDataInit>
 972:	4a0a      	ldr	r2, [pc, #40]	; (99c <LoopFillZerobss+0x1e>)
 974:	f000 b803 	b.w	97e <LoopFillZerobss>

00000978 <FillZerobss>:
 978:	2300      	movs	r3, #0
 97a:	f842 3b04 	str.w	r3, [r2], #4

0000097e <LoopFillZerobss>:
 97e:	4b08      	ldr	r3, [pc, #32]	; (9a0 <LoopFillZerobss+0x22>)
 980:	429a      	cmp	r2, r3
 982:	f4ff aff9 	bcc.w	978 <FillZerobss>
 986:	f7ff fc7d 	bl	284 <SystemInit>
 98a:	f000 f80d 	bl	9a8 <main>
 98e:	4770      	bx	lr
 990:	00001454 	.word	0x00001454
 994:	20000000 	.word	0x20000000
 998:	20000114 	.word	0x20000114
 99c:	20000184 	.word	0x20000184
 9a0:	200001a0 	.word	0x200001a0

Disassembly of section .text.Default_Handler:

000009a4 <ADC1_IRQHandler>:
 9a4:	f7ff bffe 	b.w	9a4 <ADC1_IRQHandler>

Disassembly of section .text.startup:

000009a8 <main>:
#include "/Users/liamg/Documents/gcc-arm-none-eabi-4_8-2013q4/arm-none-eabi/include/stdio.h"



int main(void)
{
 9a8:	b507      	push	{r0, r1, r2, lr}
	printf("Hello World \n");
 9aa:	4812      	ldr	r0, [pc, #72]	; (9f4 <main+0x4c>)
 9ac:	f000 f9fc 	bl	da8 <puts>

  // First switch on power to the GPIO unit. Allocate pin29 to MCO clock and pin30 to toggled port
  RCC_APB2ENR= 0x4; // Start clock to GPIO port A
 9b0:	4b11      	ldr	r3, [pc, #68]	; (9f8 <main+0x50>)
 9b2:	2204      	movs	r2, #4
 9b4:	601a      	str	r2, [r3, #0]


  GPIOA_CRH = 0x19; // Set PA8 to be alternate function with GPIO push-pull (CNF=00) and Output GPIO 10MHz (MODE=01)
 9b6:	f5a3 3384 	sub.w	r3, r3, #67584	; 0x10800
 9ba:	3b14      	subs	r3, #20
 9bc:	2219      	movs	r2, #25
 9be:	601a      	str	r2, [r3, #0]
                    // Set PA9 to be GPIO push-pull (CNF=00) and Output GPIO 10MHz (MODE=01)

  // Now pulse pin PA9 in a loop
  volatile int i=0; // GNU compiler will optimize away the loop if i is not made volatile
 9c0:	2300      	movs	r3, #0
 9c2:	9301      	str	r3, [sp, #4]

  while(1) // Roughly 10 cycles per i=1. Total cycles per while loop is 118 for i=5. So pulse frq=(1/8MHz)x118 = 67.797KHz
  {
	  GPIOA_BSRR=0x200; // Set PA9
 9c4:	4b0d      	ldr	r3, [pc, #52]	; (9fc <main+0x54>)
 9c6:	f44f 7200 	mov.w	r2, #512	; 0x200
 9ca:	601a      	str	r2, [r3, #0]
	  for (i=0;i<5;i++);
 9cc:	2200      	movs	r2, #0
 9ce:	9201      	str	r2, [sp, #4]
 9d0:	9a01      	ldr	r2, [sp, #4]
 9d2:	2a04      	cmp	r2, #4
 9d4:	dc02      	bgt.n	9dc <main+0x34>
 9d6:	9a01      	ldr	r2, [sp, #4]
 9d8:	3201      	adds	r2, #1
 9da:	e7f8      	b.n	9ce <main+0x26>
	  GPIOA_BSRR=0x2000000; // Clear PA9
 9dc:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 9e0:	601a      	str	r2, [r3, #0]
	  for (i=0;i<20;i++);
 9e2:	2300      	movs	r3, #0
 9e4:	9301      	str	r3, [sp, #4]
 9e6:	9b01      	ldr	r3, [sp, #4]
 9e8:	2b13      	cmp	r3, #19
 9ea:	dceb      	bgt.n	9c4 <main+0x1c>
 9ec:	9b01      	ldr	r3, [sp, #4]
 9ee:	3301      	adds	r3, #1
 9f0:	e7f8      	b.n	9e4 <main+0x3c>
 9f2:	bf00      	nop
 9f4:	000002b8 	.word	0x000002b8
 9f8:	40021018 	.word	0x40021018
 9fc:	40010810 	.word	0x40010810

Disassembly of section .text.__errno:

00000a00 <__errno>:
 a00:	4b01      	ldr	r3, [pc, #4]	; (a08 <__errno+0x8>)
 a02:	6818      	ldr	r0, [r3, #0]
 a04:	4770      	bx	lr
 a06:	bf00      	nop
 a08:	20000180 	.word	0x20000180

Disassembly of section .text.__fp_lock:

00000a0c <__fp_lock>:
 a0c:	2000      	movs	r0, #0
 a0e:	4770      	bx	lr

Disassembly of section .text.__fp_unlock:

00000a10 <__fp_unlock>:
 a10:	2000      	movs	r0, #0
 a12:	4770      	bx	lr

Disassembly of section .text._cleanup_r:

00000a14 <_cleanup_r>:
 a14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 a16:	4607      	mov	r7, r0
 a18:	f100 0448 	add.w	r4, r0, #72	; 0x48
 a1c:	b194      	cbz	r4, a44 <_cleanup_r+0x30>
 a1e:	68a5      	ldr	r5, [r4, #8]
 a20:	6866      	ldr	r6, [r4, #4]
 a22:	3e01      	subs	r6, #1
 a24:	d40c      	bmi.n	a40 <_cleanup_r+0x2c>
 a26:	89ab      	ldrh	r3, [r5, #12]
 a28:	2b01      	cmp	r3, #1
 a2a:	d907      	bls.n	a3c <_cleanup_r+0x28>
 a2c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 a30:	3301      	adds	r3, #1
 a32:	d003      	beq.n	a3c <_cleanup_r+0x28>
 a34:	4638      	mov	r0, r7
 a36:	4629      	mov	r1, r5
 a38:	f000 fb8e 	bl	1158 <_fflush_r>
 a3c:	3568      	adds	r5, #104	; 0x68
 a3e:	e7f0      	b.n	a22 <_cleanup_r+0xe>
 a40:	6824      	ldr	r4, [r4, #0]
 a42:	e7eb      	b.n	a1c <_cleanup_r+0x8>
 a44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.std.isra.0:

00000a48 <std.isra.0>:
 a48:	2300      	movs	r3, #0
 a4a:	b510      	push	{r4, lr}
 a4c:	4604      	mov	r4, r0
 a4e:	6003      	str	r3, [r0, #0]
 a50:	6043      	str	r3, [r0, #4]
 a52:	6083      	str	r3, [r0, #8]
 a54:	8181      	strh	r1, [r0, #12]
 a56:	6643      	str	r3, [r0, #100]	; 0x64
 a58:	81c2      	strh	r2, [r0, #14]
 a5a:	6103      	str	r3, [r0, #16]
 a5c:	6143      	str	r3, [r0, #20]
 a5e:	6183      	str	r3, [r0, #24]
 a60:	4619      	mov	r1, r3
 a62:	305c      	adds	r0, #92	; 0x5c
 a64:	2208      	movs	r2, #8
 a66:	f7ff fca5 	bl	3b4 <memset>
 a6a:	4b05      	ldr	r3, [pc, #20]	; (a80 <std.isra.0+0x38>)
 a6c:	6224      	str	r4, [r4, #32]
 a6e:	6263      	str	r3, [r4, #36]	; 0x24
 a70:	4b04      	ldr	r3, [pc, #16]	; (a84 <std.isra.0+0x3c>)
 a72:	62a3      	str	r3, [r4, #40]	; 0x28
 a74:	4b04      	ldr	r3, [pc, #16]	; (a88 <std.isra.0+0x40>)
 a76:	62e3      	str	r3, [r4, #44]	; 0x2c
 a78:	4b04      	ldr	r3, [pc, #16]	; (a8c <std.isra.0+0x44>)
 a7a:	6323      	str	r3, [r4, #48]	; 0x30
 a7c:	bd10      	pop	{r4, pc}
 a7e:	bf00      	nop
 a80:	00000dd9 	.word	0x00000dd9
 a84:	00000dff 	.word	0x00000dff
 a88:	00000e37 	.word	0x00000e37
 a8c:	00000e5b 	.word	0x00000e5b

Disassembly of section .text.__sfmoreglue:

00000a90 <__sfmoreglue>:
 a90:	b570      	push	{r4, r5, r6, lr}
 a92:	1e4b      	subs	r3, r1, #1
 a94:	2568      	movs	r5, #104	; 0x68
 a96:	435d      	muls	r5, r3
 a98:	460e      	mov	r6, r1
 a9a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 a9e:	f000 f8cf 	bl	c40 <_malloc_r>
 aa2:	4604      	mov	r4, r0
 aa4:	b140      	cbz	r0, ab8 <__sfmoreglue+0x28>
 aa6:	2100      	movs	r1, #0
 aa8:	e880 0042 	stmia.w	r0, {r1, r6}
 aac:	300c      	adds	r0, #12
 aae:	60a0      	str	r0, [r4, #8]
 ab0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 ab4:	f7ff fc7e 	bl	3b4 <memset>
 ab8:	4620      	mov	r0, r4
 aba:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text._cleanup:

00000abc <_cleanup>:
 abc:	4b01      	ldr	r3, [pc, #4]	; (ac4 <_cleanup+0x8>)
 abe:	6818      	ldr	r0, [r3, #0]
 ac0:	f7ff bfa8 	b.w	a14 <_cleanup_r>
 ac4:	000002b0 	.word	0x000002b0

Disassembly of section .text.__sinit:

00000ac8 <__sinit>:
 ac8:	6983      	ldr	r3, [r0, #24]
 aca:	b510      	push	{r4, lr}
 acc:	4604      	mov	r4, r0
 ace:	bb33      	cbnz	r3, b1e <__sinit+0x56>
 ad0:	6483      	str	r3, [r0, #72]	; 0x48
 ad2:	64c3      	str	r3, [r0, #76]	; 0x4c
 ad4:	6503      	str	r3, [r0, #80]	; 0x50
 ad6:	4b12      	ldr	r3, [pc, #72]	; (b20 <__sinit+0x58>)
 ad8:	4a12      	ldr	r2, [pc, #72]	; (b24 <__sinit+0x5c>)
 ada:	681b      	ldr	r3, [r3, #0]
 adc:	6282      	str	r2, [r0, #40]	; 0x28
 ade:	4298      	cmp	r0, r3
 ae0:	bf04      	itt	eq
 ae2:	2301      	moveq	r3, #1
 ae4:	6183      	streq	r3, [r0, #24]
 ae6:	f000 f81f 	bl	b28 <__sfp>
 aea:	6060      	str	r0, [r4, #4]
 aec:	4620      	mov	r0, r4
 aee:	f000 f81b 	bl	b28 <__sfp>
 af2:	60a0      	str	r0, [r4, #8]
 af4:	4620      	mov	r0, r4
 af6:	f000 f817 	bl	b28 <__sfp>
 afa:	2104      	movs	r1, #4
 afc:	60e0      	str	r0, [r4, #12]
 afe:	2200      	movs	r2, #0
 b00:	6860      	ldr	r0, [r4, #4]
 b02:	f7ff ffa1 	bl	a48 <std.isra.0>
 b06:	68a0      	ldr	r0, [r4, #8]
 b08:	2109      	movs	r1, #9
 b0a:	2201      	movs	r2, #1
 b0c:	f7ff ff9c 	bl	a48 <std.isra.0>
 b10:	68e0      	ldr	r0, [r4, #12]
 b12:	2112      	movs	r1, #18
 b14:	2202      	movs	r2, #2
 b16:	f7ff ff97 	bl	a48 <std.isra.0>
 b1a:	2301      	movs	r3, #1
 b1c:	61a3      	str	r3, [r4, #24]
 b1e:	bd10      	pop	{r4, pc}
 b20:	000002b0 	.word	0x000002b0
 b24:	00000a15 	.word	0x00000a15

Disassembly of section .text.__sfp:

00000b28 <__sfp>:
 b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 b2a:	4b1b      	ldr	r3, [pc, #108]	; (b98 <__sfp+0x70>)
 b2c:	4607      	mov	r7, r0
 b2e:	681e      	ldr	r6, [r3, #0]
 b30:	69b3      	ldr	r3, [r6, #24]
 b32:	b913      	cbnz	r3, b3a <__sfp+0x12>
 b34:	4630      	mov	r0, r6
 b36:	f7ff ffc7 	bl	ac8 <__sinit>
 b3a:	3648      	adds	r6, #72	; 0x48
 b3c:	68b4      	ldr	r4, [r6, #8]
 b3e:	6873      	ldr	r3, [r6, #4]
 b40:	3b01      	subs	r3, #1
 b42:	d404      	bmi.n	b4e <__sfp+0x26>
 b44:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 b48:	b175      	cbz	r5, b68 <__sfp+0x40>
 b4a:	3468      	adds	r4, #104	; 0x68
 b4c:	e7f8      	b.n	b40 <__sfp+0x18>
 b4e:	6833      	ldr	r3, [r6, #0]
 b50:	b92b      	cbnz	r3, b5e <__sfp+0x36>
 b52:	4638      	mov	r0, r7
 b54:	2104      	movs	r1, #4
 b56:	f7ff ff9b 	bl	a90 <__sfmoreglue>
 b5a:	6030      	str	r0, [r6, #0]
 b5c:	b108      	cbz	r0, b62 <__sfp+0x3a>
 b5e:	6836      	ldr	r6, [r6, #0]
 b60:	e7ec      	b.n	b3c <__sfp+0x14>
 b62:	230c      	movs	r3, #12
 b64:	603b      	str	r3, [r7, #0]
 b66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 b68:	f64f 73ff 	movw	r3, #65535	; 0xffff
 b6c:	81e3      	strh	r3, [r4, #14]
 b6e:	2301      	movs	r3, #1
 b70:	81a3      	strh	r3, [r4, #12]
 b72:	6665      	str	r5, [r4, #100]	; 0x64
 b74:	6025      	str	r5, [r4, #0]
 b76:	60a5      	str	r5, [r4, #8]
 b78:	6065      	str	r5, [r4, #4]
 b7a:	6125      	str	r5, [r4, #16]
 b7c:	6165      	str	r5, [r4, #20]
 b7e:	61a5      	str	r5, [r4, #24]
 b80:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 b84:	4629      	mov	r1, r5
 b86:	2208      	movs	r2, #8
 b88:	f7ff fc14 	bl	3b4 <memset>
 b8c:	6365      	str	r5, [r4, #52]	; 0x34
 b8e:	63a5      	str	r5, [r4, #56]	; 0x38
 b90:	64a5      	str	r5, [r4, #72]	; 0x48
 b92:	64e5      	str	r5, [r4, #76]	; 0x4c
 b94:	4620      	mov	r0, r4
 b96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 b98:	000002b0 	.word	0x000002b0

Disassembly of section .text.__sfp_lock_acquire:

00000b9c <__sfp_lock_acquire>:
 b9c:	4770      	bx	lr

Disassembly of section .text.__sfp_lock_release:

00000b9e <__sfp_lock_release>:
 b9e:	4770      	bx	lr

Disassembly of section .text.__sinit_lock_acquire:

00000ba0 <__sinit_lock_acquire>:
 ba0:	4770      	bx	lr

Disassembly of section .text.__sinit_lock_release:

00000ba2 <__sinit_lock_release>:
 ba2:	4770      	bx	lr

Disassembly of section .text.__fp_lock_all:

00000ba4 <__fp_lock_all>:
 ba4:	4b02      	ldr	r3, [pc, #8]	; (bb0 <__fp_lock_all+0xc>)
 ba6:	4903      	ldr	r1, [pc, #12]	; (bb4 <__fp_lock_all+0x10>)
 ba8:	6818      	ldr	r0, [r3, #0]
 baa:	f000 b80f 	b.w	bcc <_fwalk>
 bae:	bf00      	nop
 bb0:	20000180 	.word	0x20000180
 bb4:	00000a0d 	.word	0x00000a0d

Disassembly of section .text.__fp_unlock_all:

00000bb8 <__fp_unlock_all>:
 bb8:	4b02      	ldr	r3, [pc, #8]	; (bc4 <__fp_unlock_all+0xc>)
 bba:	4903      	ldr	r1, [pc, #12]	; (bc8 <__fp_unlock_all+0x10>)
 bbc:	6818      	ldr	r0, [r3, #0]
 bbe:	f000 b805 	b.w	bcc <_fwalk>
 bc2:	bf00      	nop
 bc4:	20000180 	.word	0x20000180
 bc8:	00000a11 	.word	0x00000a11

Disassembly of section .text._fwalk:

00000bcc <_fwalk>:
 bcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 bd0:	4688      	mov	r8, r1
 bd2:	f100 0448 	add.w	r4, r0, #72	; 0x48
 bd6:	2600      	movs	r6, #0
 bd8:	b18c      	cbz	r4, bfe <_fwalk+0x32>
 bda:	68a5      	ldr	r5, [r4, #8]
 bdc:	6867      	ldr	r7, [r4, #4]
 bde:	3f01      	subs	r7, #1
 be0:	d40b      	bmi.n	bfa <_fwalk+0x2e>
 be2:	89ab      	ldrh	r3, [r5, #12]
 be4:	2b01      	cmp	r3, #1
 be6:	d906      	bls.n	bf6 <_fwalk+0x2a>
 be8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 bec:	3301      	adds	r3, #1
 bee:	d002      	beq.n	bf6 <_fwalk+0x2a>
 bf0:	4628      	mov	r0, r5
 bf2:	47c0      	blx	r8
 bf4:	4306      	orrs	r6, r0
 bf6:	3568      	adds	r5, #104	; 0x68
 bf8:	e7f1      	b.n	bde <_fwalk+0x12>
 bfa:	6824      	ldr	r4, [r4, #0]
 bfc:	e7ec      	b.n	bd8 <_fwalk+0xc>
 bfe:	4630      	mov	r0, r6
 c00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

Disassembly of section .text._fwalk_reent:

00000c04 <_fwalk_reent>:
 c04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 c08:	4680      	mov	r8, r0
 c0a:	4689      	mov	r9, r1
 c0c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 c10:	2600      	movs	r6, #0
 c12:	b194      	cbz	r4, c3a <_fwalk_reent+0x36>
 c14:	68a5      	ldr	r5, [r4, #8]
 c16:	6867      	ldr	r7, [r4, #4]
 c18:	3f01      	subs	r7, #1
 c1a:	d40c      	bmi.n	c36 <_fwalk_reent+0x32>
 c1c:	89ab      	ldrh	r3, [r5, #12]
 c1e:	2b01      	cmp	r3, #1
 c20:	d907      	bls.n	c32 <_fwalk_reent+0x2e>
 c22:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 c26:	3301      	adds	r3, #1
 c28:	d003      	beq.n	c32 <_fwalk_reent+0x2e>
 c2a:	4640      	mov	r0, r8
 c2c:	4629      	mov	r1, r5
 c2e:	47c8      	blx	r9
 c30:	4306      	orrs	r6, r0
 c32:	3568      	adds	r5, #104	; 0x68
 c34:	e7f0      	b.n	c18 <_fwalk_reent+0x14>
 c36:	6824      	ldr	r4, [r4, #0]
 c38:	e7eb      	b.n	c12 <_fwalk_reent+0xe>
 c3a:	4630      	mov	r0, r6
 c3c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

Disassembly of section .text._malloc_r:

00000c40 <_malloc_r>:
 c40:	b570      	push	{r4, r5, r6, lr}
 c42:	1ccd      	adds	r5, r1, #3
 c44:	f025 0503 	bic.w	r5, r5, #3
 c48:	3508      	adds	r5, #8
 c4a:	2d0c      	cmp	r5, #12
 c4c:	bf38      	it	cc
 c4e:	250c      	movcc	r5, #12
 c50:	2d00      	cmp	r5, #0
 c52:	4606      	mov	r6, r0
 c54:	db3f      	blt.n	cd6 <_malloc_r+0x96>
 c56:	428d      	cmp	r5, r1
 c58:	d33d      	bcc.n	cd6 <_malloc_r+0x96>
 c5a:	4b21      	ldr	r3, [pc, #132]	; (ce0 <_malloc_r+0xa0>)
 c5c:	681c      	ldr	r4, [r3, #0]
 c5e:	4618      	mov	r0, r3
 c60:	4621      	mov	r1, r4
 c62:	b1a1      	cbz	r1, c8e <_malloc_r+0x4e>
 c64:	680b      	ldr	r3, [r1, #0]
 c66:	1b5b      	subs	r3, r3, r5
 c68:	d40e      	bmi.n	c88 <_malloc_r+0x48>
 c6a:	2b0b      	cmp	r3, #11
 c6c:	d903      	bls.n	c76 <_malloc_r+0x36>
 c6e:	600b      	str	r3, [r1, #0]
 c70:	18cc      	adds	r4, r1, r3
 c72:	50cd      	str	r5, [r1, r3]
 c74:	e01f      	b.n	cb6 <_malloc_r+0x76>
 c76:	428c      	cmp	r4, r1
 c78:	d102      	bne.n	c80 <_malloc_r+0x40>
 c7a:	6862      	ldr	r2, [r4, #4]
 c7c:	6002      	str	r2, [r0, #0]
 c7e:	e01a      	b.n	cb6 <_malloc_r+0x76>
 c80:	684b      	ldr	r3, [r1, #4]
 c82:	6063      	str	r3, [r4, #4]
 c84:	460c      	mov	r4, r1
 c86:	e016      	b.n	cb6 <_malloc_r+0x76>
 c88:	460c      	mov	r4, r1
 c8a:	6849      	ldr	r1, [r1, #4]
 c8c:	e7e9      	b.n	c62 <_malloc_r+0x22>
 c8e:	4c15      	ldr	r4, [pc, #84]	; (ce4 <_malloc_r+0xa4>)
 c90:	6823      	ldr	r3, [r4, #0]
 c92:	b91b      	cbnz	r3, c9c <_malloc_r+0x5c>
 c94:	4630      	mov	r0, r6
 c96:	f000 f88f 	bl	db8 <_sbrk_r>
 c9a:	6020      	str	r0, [r4, #0]
 c9c:	4629      	mov	r1, r5
 c9e:	4630      	mov	r0, r6
 ca0:	f000 f88a 	bl	db8 <_sbrk_r>
 ca4:	1c43      	adds	r3, r0, #1
 ca6:	4601      	mov	r1, r0
 ca8:	d015      	beq.n	cd6 <_malloc_r+0x96>
 caa:	1cc4      	adds	r4, r0, #3
 cac:	f024 0403 	bic.w	r4, r4, #3
 cb0:	4284      	cmp	r4, r0
 cb2:	d10a      	bne.n	cca <_malloc_r+0x8a>
 cb4:	6025      	str	r5, [r4, #0]
 cb6:	f104 000b 	add.w	r0, r4, #11
 cba:	1d23      	adds	r3, r4, #4
 cbc:	f020 0007 	bic.w	r0, r0, #7
 cc0:	1ac3      	subs	r3, r0, r3
 cc2:	d00b      	beq.n	cdc <_malloc_r+0x9c>
 cc4:	425a      	negs	r2, r3
 cc6:	50e2      	str	r2, [r4, r3]
 cc8:	bd70      	pop	{r4, r5, r6, pc}
 cca:	4630      	mov	r0, r6
 ccc:	1a61      	subs	r1, r4, r1
 cce:	f000 f873 	bl	db8 <_sbrk_r>
 cd2:	3001      	adds	r0, #1
 cd4:	d1ee      	bne.n	cb4 <_malloc_r+0x74>
 cd6:	230c      	movs	r3, #12
 cd8:	6033      	str	r3, [r6, #0]
 cda:	2000      	movs	r0, #0
 cdc:	bd70      	pop	{r4, r5, r6, pc}
 cde:	bf00      	nop
 ce0:	20000258 	.word	0x20000258
 ce4:	20000254 	.word	0x20000254

Disassembly of section .text._puts_r:

00000ce8 <_puts_r>:
 ce8:	b570      	push	{r4, r5, r6, lr}
 cea:	460e      	mov	r6, r1
 cec:	4605      	mov	r5, r0
 cee:	b118      	cbz	r0, cf8 <_puts_r+0x10>
 cf0:	6983      	ldr	r3, [r0, #24]
 cf2:	b90b      	cbnz	r3, cf8 <_puts_r+0x10>
 cf4:	f7ff fee8 	bl	ac8 <__sinit>
 cf8:	68ac      	ldr	r4, [r5, #8]
 cfa:	89a3      	ldrh	r3, [r4, #12]
 cfc:	0719      	lsls	r1, r3, #28
 cfe:	d501      	bpl.n	d04 <_puts_r+0x1c>
 d00:	6923      	ldr	r3, [r4, #16]
 d02:	b983      	cbnz	r3, d26 <_puts_r+0x3e>
 d04:	4628      	mov	r0, r5
 d06:	4621      	mov	r1, r4
 d08:	f000 f924 	bl	f54 <__swsetup_r>
 d0c:	b158      	cbz	r0, d26 <_puts_r+0x3e>
 d0e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 d12:	bd70      	pop	{r4, r5, r6, pc}
 d14:	2b00      	cmp	r3, #0
 d16:	db0e      	blt.n	d36 <_puts_r+0x4e>
 d18:	6823      	ldr	r3, [r4, #0]
 d1a:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 d1e:	701a      	strb	r2, [r3, #0]
 d20:	6823      	ldr	r3, [r4, #0]
 d22:	3301      	adds	r3, #1
 d24:	6023      	str	r3, [r4, #0]
 d26:	68a3      	ldr	r3, [r4, #8]
 d28:	f816 2b01 	ldrb.w	r2, [r6], #1
 d2c:	3b01      	subs	r3, #1
 d2e:	60a3      	str	r3, [r4, #8]
 d30:	2a00      	cmp	r2, #0
 d32:	d1ef      	bne.n	d14 <_puts_r+0x2c>
 d34:	e017      	b.n	d66 <_puts_r+0x7e>
 d36:	69a2      	ldr	r2, [r4, #24]
 d38:	4293      	cmp	r3, r2
 d3a:	db09      	blt.n	d50 <_puts_r+0x68>
 d3c:	6823      	ldr	r3, [r4, #0]
 d3e:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 d42:	701a      	strb	r2, [r3, #0]
 d44:	6823      	ldr	r3, [r4, #0]
 d46:	7819      	ldrb	r1, [r3, #0]
 d48:	290a      	cmp	r1, #10
 d4a:	d1ea      	bne.n	d22 <_puts_r+0x3a>
 d4c:	4628      	mov	r0, r5
 d4e:	e002      	b.n	d56 <_puts_r+0x6e>
 d50:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 d54:	4628      	mov	r0, r5
 d56:	4622      	mov	r2, r4
 d58:	f000 f88c 	bl	e74 <__swbuf_r>
 d5c:	f1b0 32ff 	subs.w	r2, r0, #4294967295	; 0xffffffff
 d60:	4250      	negs	r0, r2
 d62:	4150      	adcs	r0, r2
 d64:	e7d2      	b.n	d0c <_puts_r+0x24>
 d66:	2b00      	cmp	r3, #0
 d68:	da16      	bge.n	d98 <_puts_r+0xb0>
 d6a:	69a2      	ldr	r2, [r4, #24]
 d6c:	4293      	cmp	r3, r2
 d6e:	db08      	blt.n	d82 <_puts_r+0x9a>
 d70:	6823      	ldr	r3, [r4, #0]
 d72:	220a      	movs	r2, #10
 d74:	701a      	strb	r2, [r3, #0]
 d76:	6823      	ldr	r3, [r4, #0]
 d78:	7819      	ldrb	r1, [r3, #0]
 d7a:	4291      	cmp	r1, r2
 d7c:	d110      	bne.n	da0 <_puts_r+0xb8>
 d7e:	4628      	mov	r0, r5
 d80:	e001      	b.n	d86 <_puts_r+0x9e>
 d82:	4628      	mov	r0, r5
 d84:	210a      	movs	r1, #10
 d86:	4622      	mov	r2, r4
 d88:	f000 f874 	bl	e74 <__swbuf_r>
 d8c:	f1b0 33ff 	subs.w	r3, r0, #4294967295	; 0xffffffff
 d90:	4258      	negs	r0, r3
 d92:	4158      	adcs	r0, r3
 d94:	b130      	cbz	r0, da4 <_puts_r+0xbc>
 d96:	e7ba      	b.n	d0e <_puts_r+0x26>
 d98:	6823      	ldr	r3, [r4, #0]
 d9a:	220a      	movs	r2, #10
 d9c:	701a      	strb	r2, [r3, #0]
 d9e:	6823      	ldr	r3, [r4, #0]
 da0:	3301      	adds	r3, #1
 da2:	6023      	str	r3, [r4, #0]
 da4:	200a      	movs	r0, #10
 da6:	bd70      	pop	{r4, r5, r6, pc}

Disassembly of section .text.puts:

00000da8 <puts>:
 da8:	4b02      	ldr	r3, [pc, #8]	; (db4 <puts+0xc>)
 daa:	4601      	mov	r1, r0
 dac:	6818      	ldr	r0, [r3, #0]
 dae:	f7ff bf9b 	b.w	ce8 <_puts_r>
 db2:	bf00      	nop
 db4:	20000180 	.word	0x20000180

Disassembly of section .text._sbrk_r:

00000db8 <_sbrk_r>:
 db8:	b538      	push	{r3, r4, r5, lr}
 dba:	4c06      	ldr	r4, [pc, #24]	; (dd4 <_sbrk_r+0x1c>)
 dbc:	2300      	movs	r3, #0
 dbe:	4605      	mov	r5, r0
 dc0:	4608      	mov	r0, r1
 dc2:	6023      	str	r3, [r4, #0]
 dc4:	f7ff fc4c 	bl	660 <_sbrk>
 dc8:	1c43      	adds	r3, r0, #1
 dca:	d102      	bne.n	dd2 <_sbrk_r+0x1a>
 dcc:	6823      	ldr	r3, [r4, #0]
 dce:	b103      	cbz	r3, dd2 <_sbrk_r+0x1a>
 dd0:	602b      	str	r3, [r5, #0]
 dd2:	bd38      	pop	{r3, r4, r5, pc}
 dd4:	200001a0 	.word	0x200001a0

Disassembly of section .text.__sread:

00000dd8 <__sread>:
 dd8:	b510      	push	{r4, lr}
 dda:	460c      	mov	r4, r1
 ddc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 de0:	f000 fa98 	bl	1314 <_read_r>
 de4:	2800      	cmp	r0, #0
 de6:	db03      	blt.n	df0 <__sread+0x18>
 de8:	6d63      	ldr	r3, [r4, #84]	; 0x54
 dea:	4403      	add	r3, r0
 dec:	6563      	str	r3, [r4, #84]	; 0x54
 dee:	bd10      	pop	{r4, pc}
 df0:	89a3      	ldrh	r3, [r4, #12]
 df2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 df6:	81a3      	strh	r3, [r4, #12]
 df8:	bd10      	pop	{r4, pc}

Disassembly of section .text.__seofread:

00000dfa <__seofread>:
 dfa:	2000      	movs	r0, #0
 dfc:	4770      	bx	lr

Disassembly of section .text.__swrite:

00000dfe <__swrite>:
 dfe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 e02:	461d      	mov	r5, r3
 e04:	898b      	ldrh	r3, [r1, #12]
 e06:	4607      	mov	r7, r0
 e08:	05db      	lsls	r3, r3, #23
 e0a:	460c      	mov	r4, r1
 e0c:	4616      	mov	r6, r2
 e0e:	d505      	bpl.n	e1c <__swrite+0x1e>
 e10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 e14:	2200      	movs	r2, #0
 e16:	2302      	movs	r3, #2
 e18:	f000 f9da 	bl	11d0 <_lseek_r>
 e1c:	89a3      	ldrh	r3, [r4, #12]
 e1e:	4638      	mov	r0, r7
 e20:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 e24:	81a3      	strh	r3, [r4, #12]
 e26:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 e2a:	4632      	mov	r2, r6
 e2c:	462b      	mov	r3, r5
 e2e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 e32:	f000 b87d 	b.w	f30 <_write_r>

Disassembly of section .text.__sseek:

00000e36 <__sseek>:
 e36:	b510      	push	{r4, lr}
 e38:	460c      	mov	r4, r1
 e3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 e3e:	f000 f9c7 	bl	11d0 <_lseek_r>
 e42:	1c43      	adds	r3, r0, #1
 e44:	89a3      	ldrh	r3, [r4, #12]
 e46:	d103      	bne.n	e50 <__sseek+0x1a>
 e48:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 e4c:	81a3      	strh	r3, [r4, #12]
 e4e:	bd10      	pop	{r4, pc}
 e50:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 e54:	81a3      	strh	r3, [r4, #12]
 e56:	6560      	str	r0, [r4, #84]	; 0x54
 e58:	bd10      	pop	{r4, pc}

Disassembly of section .text.__sclose:

00000e5a <__sclose>:
 e5a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 e5e:	f000 b8e7 	b.w	1030 <_close_r>

Disassembly of section .text.strlen:

00000e62 <strlen>:
 e62:	4603      	mov	r3, r0
 e64:	f813 2b01 	ldrb.w	r2, [r3], #1
 e68:	2a00      	cmp	r2, #0
 e6a:	d1fb      	bne.n	e64 <strlen+0x2>
 e6c:	1a18      	subs	r0, r3, r0
 e6e:	3801      	subs	r0, #1
 e70:	4770      	bx	lr

Disassembly of section .text.__swbuf_r:

00000e74 <__swbuf_r>:
 e74:	b570      	push	{r4, r5, r6, lr}
 e76:	460e      	mov	r6, r1
 e78:	4614      	mov	r4, r2
 e7a:	4605      	mov	r5, r0
 e7c:	b118      	cbz	r0, e86 <__swbuf_r+0x12>
 e7e:	6983      	ldr	r3, [r0, #24]
 e80:	b90b      	cbnz	r3, e86 <__swbuf_r+0x12>
 e82:	f7ff fe21 	bl	ac8 <__sinit>
 e86:	4b22      	ldr	r3, [pc, #136]	; (f10 <__swbuf_r+0x9c>)
 e88:	429c      	cmp	r4, r3
 e8a:	d101      	bne.n	e90 <__swbuf_r+0x1c>
 e8c:	686c      	ldr	r4, [r5, #4]
 e8e:	e008      	b.n	ea2 <__swbuf_r+0x2e>
 e90:	4b20      	ldr	r3, [pc, #128]	; (f14 <__swbuf_r+0xa0>)
 e92:	429c      	cmp	r4, r3
 e94:	d101      	bne.n	e9a <__swbuf_r+0x26>
 e96:	68ac      	ldr	r4, [r5, #8]
 e98:	e003      	b.n	ea2 <__swbuf_r+0x2e>
 e9a:	4b1f      	ldr	r3, [pc, #124]	; (f18 <__swbuf_r+0xa4>)
 e9c:	429c      	cmp	r4, r3
 e9e:	bf08      	it	eq
 ea0:	68ec      	ldreq	r4, [r5, #12]
 ea2:	69a3      	ldr	r3, [r4, #24]
 ea4:	60a3      	str	r3, [r4, #8]
 ea6:	89a3      	ldrh	r3, [r4, #12]
 ea8:	071a      	lsls	r2, r3, #28
 eaa:	d509      	bpl.n	ec0 <__swbuf_r+0x4c>
 eac:	6923      	ldr	r3, [r4, #16]
 eae:	b13b      	cbz	r3, ec0 <__swbuf_r+0x4c>
 eb0:	6923      	ldr	r3, [r4, #16]
 eb2:	6820      	ldr	r0, [r4, #0]
 eb4:	b2f6      	uxtb	r6, r6
 eb6:	1ac0      	subs	r0, r0, r3
 eb8:	6963      	ldr	r3, [r4, #20]
 eba:	4298      	cmp	r0, r3
 ebc:	db0f      	blt.n	ede <__swbuf_r+0x6a>
 ebe:	e008      	b.n	ed2 <__swbuf_r+0x5e>
 ec0:	4628      	mov	r0, r5
 ec2:	4621      	mov	r1, r4
 ec4:	f000 f846 	bl	f54 <__swsetup_r>
 ec8:	2800      	cmp	r0, #0
 eca:	d0f1      	beq.n	eb0 <__swbuf_r+0x3c>
 ecc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 ed0:	bd70      	pop	{r4, r5, r6, pc}
 ed2:	4628      	mov	r0, r5
 ed4:	4621      	mov	r1, r4
 ed6:	f000 f93f 	bl	1158 <_fflush_r>
 eda:	2800      	cmp	r0, #0
 edc:	d1f6      	bne.n	ecc <__swbuf_r+0x58>
 ede:	68a3      	ldr	r3, [r4, #8]
 ee0:	3001      	adds	r0, #1
 ee2:	3b01      	subs	r3, #1
 ee4:	60a3      	str	r3, [r4, #8]
 ee6:	6823      	ldr	r3, [r4, #0]
 ee8:	1c5a      	adds	r2, r3, #1
 eea:	6022      	str	r2, [r4, #0]
 eec:	701e      	strb	r6, [r3, #0]
 eee:	6963      	ldr	r3, [r4, #20]
 ef0:	4298      	cmp	r0, r3
 ef2:	d004      	beq.n	efe <__swbuf_r+0x8a>
 ef4:	89a3      	ldrh	r3, [r4, #12]
 ef6:	07db      	lsls	r3, r3, #31
 ef8:	d507      	bpl.n	f0a <__swbuf_r+0x96>
 efa:	2e0a      	cmp	r6, #10
 efc:	d105      	bne.n	f0a <__swbuf_r+0x96>
 efe:	4628      	mov	r0, r5
 f00:	4621      	mov	r1, r4
 f02:	f000 f929 	bl	1158 <_fflush_r>
 f06:	2800      	cmp	r0, #0
 f08:	d1e0      	bne.n	ecc <__swbuf_r+0x58>
 f0a:	4630      	mov	r0, r6
 f0c:	bd70      	pop	{r4, r5, r6, pc}
 f0e:	bf00      	nop
 f10:	000002c8 	.word	0x000002c8
 f14:	000002e8 	.word	0x000002e8
 f18:	00000308 	.word	0x00000308

Disassembly of section .text.__swbuf:

00000f1c <__swbuf>:
 f1c:	460a      	mov	r2, r1
 f1e:	4903      	ldr	r1, [pc, #12]	; (f2c <__swbuf+0x10>)
 f20:	4603      	mov	r3, r0
 f22:	6808      	ldr	r0, [r1, #0]
 f24:	4619      	mov	r1, r3
 f26:	f7ff bfa5 	b.w	e74 <__swbuf_r>
 f2a:	bf00      	nop
 f2c:	20000180 	.word	0x20000180

Disassembly of section .text._write_r:

00000f30 <_write_r>:
 f30:	b538      	push	{r3, r4, r5, lr}
 f32:	4c07      	ldr	r4, [pc, #28]	; (f50 <_write_r+0x20>)
 f34:	4605      	mov	r5, r0
 f36:	2000      	movs	r0, #0
 f38:	6020      	str	r0, [r4, #0]
 f3a:	4608      	mov	r0, r1
 f3c:	4611      	mov	r1, r2
 f3e:	461a      	mov	r2, r3
 f40:	f7ff fb39 	bl	5b6 <_write>
 f44:	1c43      	adds	r3, r0, #1
 f46:	d102      	bne.n	f4e <_write_r+0x1e>
 f48:	6823      	ldr	r3, [r4, #0]
 f4a:	b103      	cbz	r3, f4e <_write_r+0x1e>
 f4c:	602b      	str	r3, [r5, #0]
 f4e:	bd38      	pop	{r3, r4, r5, pc}
 f50:	200001a0 	.word	0x200001a0

Disassembly of section .text.__swsetup_r:

00000f54 <__swsetup_r>:
     f54:	4b32      	ldr	r3, [pc, #200]	; (1020 <__swsetup_r+0xcc>)
     f56:	b570      	push	{r4, r5, r6, lr}
     f58:	681d      	ldr	r5, [r3, #0]
     f5a:	4606      	mov	r6, r0
     f5c:	460c      	mov	r4, r1
     f5e:	b125      	cbz	r5, f6a <__swsetup_r+0x16>
     f60:	69ab      	ldr	r3, [r5, #24]
     f62:	b913      	cbnz	r3, f6a <__swsetup_r+0x16>
     f64:	4628      	mov	r0, r5
     f66:	f7ff fdaf 	bl	ac8 <__sinit>
     f6a:	4b2e      	ldr	r3, [pc, #184]	; (1024 <__swsetup_r+0xd0>)
     f6c:	429c      	cmp	r4, r3
     f6e:	d101      	bne.n	f74 <__swsetup_r+0x20>
     f70:	686c      	ldr	r4, [r5, #4]
     f72:	e008      	b.n	f86 <__swsetup_r+0x32>
     f74:	4b2c      	ldr	r3, [pc, #176]	; (1028 <__swsetup_r+0xd4>)
     f76:	429c      	cmp	r4, r3
     f78:	d101      	bne.n	f7e <__swsetup_r+0x2a>
     f7a:	68ac      	ldr	r4, [r5, #8]
     f7c:	e003      	b.n	f86 <__swsetup_r+0x32>
     f7e:	4b2b      	ldr	r3, [pc, #172]	; (102c <__swsetup_r+0xd8>)
     f80:	429c      	cmp	r4, r3
     f82:	bf08      	it	eq
     f84:	68ec      	ldreq	r4, [r5, #12]
     f86:	89a2      	ldrh	r2, [r4, #12]
     f88:	b293      	uxth	r3, r2
     f8a:	0719      	lsls	r1, r3, #28
     f8c:	d420      	bmi.n	fd0 <__swsetup_r+0x7c>
     f8e:	06dd      	lsls	r5, r3, #27
     f90:	d405      	bmi.n	f9e <__swsetup_r+0x4a>
     f92:	2309      	movs	r3, #9
     f94:	f042 0240 	orr.w	r2, r2, #64	; 0x40
     f98:	6033      	str	r3, [r6, #0]
     f9a:	81a2      	strh	r2, [r4, #12]
     f9c:	e03b      	b.n	1016 <__swsetup_r+0xc2>
     f9e:	0758      	lsls	r0, r3, #29
     fa0:	d512      	bpl.n	fc8 <__swsetup_r+0x74>
     fa2:	6b61      	ldr	r1, [r4, #52]	; 0x34
     fa4:	b141      	cbz	r1, fb8 <__swsetup_r+0x64>
     fa6:	f104 0344 	add.w	r3, r4, #68	; 0x44
     faa:	4299      	cmp	r1, r3
     fac:	d002      	beq.n	fb4 <__swsetup_r+0x60>
     fae:	4630      	mov	r0, r6
     fb0:	f000 f96c 	bl	128c <_free_r>
     fb4:	2300      	movs	r3, #0
     fb6:	6363      	str	r3, [r4, #52]	; 0x34
     fb8:	89a3      	ldrh	r3, [r4, #12]
     fba:	f023 0324 	bic.w	r3, r3, #36	; 0x24
     fbe:	81a3      	strh	r3, [r4, #12]
     fc0:	2300      	movs	r3, #0
     fc2:	6063      	str	r3, [r4, #4]
     fc4:	6923      	ldr	r3, [r4, #16]
     fc6:	6023      	str	r3, [r4, #0]
     fc8:	89a3      	ldrh	r3, [r4, #12]
     fca:	f043 0308 	orr.w	r3, r3, #8
     fce:	81a3      	strh	r3, [r4, #12]
     fd0:	6923      	ldr	r3, [r4, #16]
     fd2:	b94b      	cbnz	r3, fe8 <__swsetup_r+0x94>
     fd4:	89a3      	ldrh	r3, [r4, #12]
     fd6:	f403 7320 	and.w	r3, r3, #640	; 0x280
     fda:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
     fde:	d003      	beq.n	fe8 <__swsetup_r+0x94>
     fe0:	4630      	mov	r0, r6
     fe2:	4621      	mov	r1, r4
     fe4:	f000 f906 	bl	11f4 <__smakebuf_r>
     fe8:	89a3      	ldrh	r3, [r4, #12]
     fea:	f013 0201 	ands.w	r2, r3, #1
     fee:	d005      	beq.n	ffc <__swsetup_r+0xa8>
     ff0:	2200      	movs	r2, #0
     ff2:	60a2      	str	r2, [r4, #8]
     ff4:	6962      	ldr	r2, [r4, #20]
     ff6:	4252      	negs	r2, r2
     ff8:	61a2      	str	r2, [r4, #24]
     ffa:	e003      	b.n	1004 <__swsetup_r+0xb0>
     ffc:	0799      	lsls	r1, r3, #30
     ffe:	bf58      	it	pl
    1000:	6962      	ldrpl	r2, [r4, #20]
    1002:	60a2      	str	r2, [r4, #8]
    1004:	6922      	ldr	r2, [r4, #16]
    1006:	b94a      	cbnz	r2, 101c <__swsetup_r+0xc8>
    1008:	f003 0080 	and.w	r0, r3, #128	; 0x80
    100c:	b280      	uxth	r0, r0
    100e:	b130      	cbz	r0, 101e <__swsetup_r+0xca>
    1010:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1014:	81a3      	strh	r3, [r4, #12]
    1016:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    101a:	bd70      	pop	{r4, r5, r6, pc}
    101c:	2000      	movs	r0, #0
    101e:	bd70      	pop	{r4, r5, r6, pc}
    1020:	20000180 	.word	0x20000180
    1024:	000002c8 	.word	0x000002c8
    1028:	000002e8 	.word	0x000002e8
    102c:	00000308 	.word	0x00000308

Disassembly of section .text._close_r:

00001030 <_close_r>:
    1030:	b538      	push	{r3, r4, r5, lr}
    1032:	4c06      	ldr	r4, [pc, #24]	; (104c <_close_r+0x1c>)
    1034:	2300      	movs	r3, #0
    1036:	4605      	mov	r5, r0
    1038:	4608      	mov	r0, r1
    103a:	6023      	str	r3, [r4, #0]
    103c:	f7ff faea 	bl	614 <_close>
    1040:	1c43      	adds	r3, r0, #1
    1042:	d102      	bne.n	104a <_close_r+0x1a>
    1044:	6823      	ldr	r3, [r4, #0]
    1046:	b103      	cbz	r3, 104a <_close_r+0x1a>
    1048:	602b      	str	r3, [r5, #0]
    104a:	bd38      	pop	{r3, r4, r5, pc}
    104c:	200001a0 	.word	0x200001a0

Disassembly of section .text.__sflush_r:

00001050 <__sflush_r>:
    1050:	898a      	ldrh	r2, [r1, #12]
    1052:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1056:	4605      	mov	r5, r0
    1058:	0710      	lsls	r0, r2, #28
    105a:	460c      	mov	r4, r1
    105c:	d457      	bmi.n	110e <__sflush_r+0xbe>
    105e:	684b      	ldr	r3, [r1, #4]
    1060:	2b00      	cmp	r3, #0
    1062:	dc02      	bgt.n	106a <__sflush_r+0x1a>
    1064:	6c0b      	ldr	r3, [r1, #64]	; 0x40
    1066:	2b00      	cmp	r3, #0
    1068:	dd18      	ble.n	109c <__sflush_r+0x4c>
    106a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    106c:	b1b6      	cbz	r6, 109c <__sflush_r+0x4c>
    106e:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
    1072:	2300      	movs	r3, #0
    1074:	b292      	uxth	r2, r2
    1076:	682f      	ldr	r7, [r5, #0]
    1078:	602b      	str	r3, [r5, #0]
    107a:	b10a      	cbz	r2, 1080 <__sflush_r+0x30>
    107c:	6d62      	ldr	r2, [r4, #84]	; 0x54
    107e:	e010      	b.n	10a2 <__sflush_r+0x52>
    1080:	6a21      	ldr	r1, [r4, #32]
    1082:	4628      	mov	r0, r5
    1084:	2301      	movs	r3, #1
    1086:	47b0      	blx	r6
    1088:	1c41      	adds	r1, r0, #1
    108a:	4602      	mov	r2, r0
    108c:	d109      	bne.n	10a2 <__sflush_r+0x52>
    108e:	682b      	ldr	r3, [r5, #0]
    1090:	b13b      	cbz	r3, 10a2 <__sflush_r+0x52>
    1092:	2b1d      	cmp	r3, #29
    1094:	d001      	beq.n	109a <__sflush_r+0x4a>
    1096:	2b16      	cmp	r3, #22
    1098:	d146      	bne.n	1128 <__sflush_r+0xd8>
    109a:	602f      	str	r7, [r5, #0]
    109c:	2000      	movs	r0, #0
    109e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    10a2:	89a3      	ldrh	r3, [r4, #12]
    10a4:	075b      	lsls	r3, r3, #29
    10a6:	d505      	bpl.n	10b4 <__sflush_r+0x64>
    10a8:	6863      	ldr	r3, [r4, #4]
    10aa:	1ad2      	subs	r2, r2, r3
    10ac:	6b63      	ldr	r3, [r4, #52]	; 0x34
    10ae:	b10b      	cbz	r3, 10b4 <__sflush_r+0x64>
    10b0:	6c23      	ldr	r3, [r4, #64]	; 0x40
    10b2:	1ad2      	subs	r2, r2, r3
    10b4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
    10b6:	4628      	mov	r0, r5
    10b8:	6a21      	ldr	r1, [r4, #32]
    10ba:	2300      	movs	r3, #0
    10bc:	47b0      	blx	r6
    10be:	1c46      	adds	r6, r0, #1
    10c0:	89a2      	ldrh	r2, [r4, #12]
    10c2:	d105      	bne.n	10d0 <__sflush_r+0x80>
    10c4:	682b      	ldr	r3, [r5, #0]
    10c6:	b11b      	cbz	r3, 10d0 <__sflush_r+0x80>
    10c8:	2b1d      	cmp	r3, #29
    10ca:	d001      	beq.n	10d0 <__sflush_r+0x80>
    10cc:	2b16      	cmp	r3, #22
    10ce:	d119      	bne.n	1104 <__sflush_r+0xb4>
    10d0:	2300      	movs	r3, #0
    10d2:	6063      	str	r3, [r4, #4]
    10d4:	6923      	ldr	r3, [r4, #16]
    10d6:	04d1      	lsls	r1, r2, #19
    10d8:	6023      	str	r3, [r4, #0]
    10da:	d504      	bpl.n	10e6 <__sflush_r+0x96>
    10dc:	1c42      	adds	r2, r0, #1
    10de:	d101      	bne.n	10e4 <__sflush_r+0x94>
    10e0:	682b      	ldr	r3, [r5, #0]
    10e2:	b903      	cbnz	r3, 10e6 <__sflush_r+0x96>
    10e4:	6560      	str	r0, [r4, #84]	; 0x54
    10e6:	6b61      	ldr	r1, [r4, #52]	; 0x34
    10e8:	602f      	str	r7, [r5, #0]
    10ea:	2900      	cmp	r1, #0
    10ec:	d0d6      	beq.n	109c <__sflush_r+0x4c>
    10ee:	f104 0344 	add.w	r3, r4, #68	; 0x44
    10f2:	4299      	cmp	r1, r3
    10f4:	d002      	beq.n	10fc <__sflush_r+0xac>
    10f6:	4628      	mov	r0, r5
    10f8:	f000 f8c8 	bl	128c <_free_r>
    10fc:	2000      	movs	r0, #0
    10fe:	6360      	str	r0, [r4, #52]	; 0x34
    1100:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1104:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    1108:	81a2      	strh	r2, [r4, #12]
    110a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    110e:	690e      	ldr	r6, [r1, #16]
    1110:	2e00      	cmp	r6, #0
    1112:	d0c3      	beq.n	109c <__sflush_r+0x4c>
    1114:	680b      	ldr	r3, [r1, #0]
    1116:	600e      	str	r6, [r1, #0]
    1118:	ebc6 0803 	rsb	r8, r6, r3
    111c:	0793      	lsls	r3, r2, #30
    111e:	bf0c      	ite	eq
    1120:	694b      	ldreq	r3, [r1, #20]
    1122:	2300      	movne	r3, #0
    1124:	608b      	str	r3, [r1, #8]
    1126:	e012      	b.n	114e <__sflush_r+0xfe>
    1128:	89a3      	ldrh	r3, [r4, #12]
    112a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    112e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1132:	81a3      	strh	r3, [r4, #12]
    1134:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1138:	6aa7      	ldr	r7, [r4, #40]	; 0x28
    113a:	4628      	mov	r0, r5
    113c:	6a21      	ldr	r1, [r4, #32]
    113e:	4632      	mov	r2, r6
    1140:	4643      	mov	r3, r8
    1142:	47b8      	blx	r7
    1144:	2800      	cmp	r0, #0
    1146:	ddef      	ble.n	1128 <__sflush_r+0xd8>
    1148:	4406      	add	r6, r0
    114a:	ebc0 0808 	rsb	r8, r0, r8
    114e:	f1b8 0f00 	cmp.w	r8, #0
    1152:	dcf1      	bgt.n	1138 <__sflush_r+0xe8>
    1154:	e7a2      	b.n	109c <__sflush_r+0x4c>

Disassembly of section .text._fflush_r:

00001158 <_fflush_r>:
    1158:	b538      	push	{r3, r4, r5, lr}
    115a:	690b      	ldr	r3, [r1, #16]
    115c:	4605      	mov	r5, r0
    115e:	460c      	mov	r4, r1
    1160:	b1db      	cbz	r3, 119a <_fflush_r+0x42>
    1162:	b118      	cbz	r0, 116c <_fflush_r+0x14>
    1164:	6983      	ldr	r3, [r0, #24]
    1166:	b90b      	cbnz	r3, 116c <_fflush_r+0x14>
    1168:	f7ff fcae 	bl	ac8 <__sinit>
    116c:	4b0c      	ldr	r3, [pc, #48]	; (11a0 <_fflush_r+0x48>)
    116e:	429c      	cmp	r4, r3
    1170:	d101      	bne.n	1176 <_fflush_r+0x1e>
    1172:	686c      	ldr	r4, [r5, #4]
    1174:	e008      	b.n	1188 <_fflush_r+0x30>
    1176:	4b0b      	ldr	r3, [pc, #44]	; (11a4 <_fflush_r+0x4c>)
    1178:	429c      	cmp	r4, r3
    117a:	d101      	bne.n	1180 <_fflush_r+0x28>
    117c:	68ac      	ldr	r4, [r5, #8]
    117e:	e003      	b.n	1188 <_fflush_r+0x30>
    1180:	4b09      	ldr	r3, [pc, #36]	; (11a8 <_fflush_r+0x50>)
    1182:	429c      	cmp	r4, r3
    1184:	bf08      	it	eq
    1186:	68ec      	ldreq	r4, [r5, #12]
    1188:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    118c:	b12b      	cbz	r3, 119a <_fflush_r+0x42>
    118e:	4628      	mov	r0, r5
    1190:	4621      	mov	r1, r4
    1192:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1196:	f7ff bf5b 	b.w	1050 <__sflush_r>
    119a:	2000      	movs	r0, #0
    119c:	bd38      	pop	{r3, r4, r5, pc}
    119e:	bf00      	nop
    11a0:	000002c8 	.word	0x000002c8
    11a4:	000002e8 	.word	0x000002e8
    11a8:	00000308 	.word	0x00000308

Disassembly of section .text.fflush:

000011ac <fflush>:
    11ac:	4601      	mov	r1, r0
    11ae:	b920      	cbnz	r0, 11ba <fflush+0xe>
    11b0:	4b04      	ldr	r3, [pc, #16]	; (11c4 <fflush+0x18>)
    11b2:	4905      	ldr	r1, [pc, #20]	; (11c8 <fflush+0x1c>)
    11b4:	6818      	ldr	r0, [r3, #0]
    11b6:	f7ff bd25 	b.w	c04 <_fwalk_reent>
    11ba:	4b04      	ldr	r3, [pc, #16]	; (11cc <fflush+0x20>)
    11bc:	6818      	ldr	r0, [r3, #0]
    11be:	f7ff bfcb 	b.w	1158 <_fflush_r>
    11c2:	bf00      	nop
    11c4:	000002b0 	.word	0x000002b0
    11c8:	00001159 	.word	0x00001159
    11cc:	20000180 	.word	0x20000180

Disassembly of section .text._lseek_r:

000011d0 <_lseek_r>:
    11d0:	b538      	push	{r3, r4, r5, lr}
    11d2:	4c07      	ldr	r4, [pc, #28]	; (11f0 <_lseek_r+0x20>)
    11d4:	4605      	mov	r5, r0
    11d6:	2000      	movs	r0, #0
    11d8:	6020      	str	r0, [r4, #0]
    11da:	4608      	mov	r0, r1
    11dc:	4611      	mov	r1, r2
    11de:	461a      	mov	r2, r3
    11e0:	f7ff f9d7 	bl	592 <_lseek>
    11e4:	1c43      	adds	r3, r0, #1
    11e6:	d102      	bne.n	11ee <_lseek_r+0x1e>
    11e8:	6823      	ldr	r3, [r4, #0]
    11ea:	b103      	cbz	r3, 11ee <_lseek_r+0x1e>
    11ec:	602b      	str	r3, [r5, #0]
    11ee:	bd38      	pop	{r3, r4, r5, pc}
    11f0:	200001a0 	.word	0x200001a0

Disassembly of section .text.__smakebuf_r:

000011f4 <__smakebuf_r>:
    11f4:	b5f0      	push	{r4, r5, r6, r7, lr}
    11f6:	898b      	ldrh	r3, [r1, #12]
    11f8:	b091      	sub	sp, #68	; 0x44
    11fa:	079e      	lsls	r6, r3, #30
    11fc:	4605      	mov	r5, r0
    11fe:	460c      	mov	r4, r1
    1200:	d425      	bmi.n	124e <__smakebuf_r+0x5a>
    1202:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    1206:	2900      	cmp	r1, #0
    1208:	da08      	bge.n	121c <__smakebuf_r+0x28>
    120a:	89a3      	ldrh	r3, [r4, #12]
    120c:	2700      	movs	r7, #0
    120e:	f013 0f80 	tst.w	r3, #128	; 0x80
    1212:	bf14      	ite	ne
    1214:	2640      	movne	r6, #64	; 0x40
    1216:	f44f 6680 	moveq.w	r6, #1024	; 0x400
    121a:	e00d      	b.n	1238 <__smakebuf_r+0x44>
    121c:	aa01      	add	r2, sp, #4
    121e:	f000 f8f7 	bl	1410 <_fstat_r>
    1222:	2800      	cmp	r0, #0
    1224:	dbf1      	blt.n	120a <__smakebuf_r+0x16>
    1226:	9f02      	ldr	r7, [sp, #8]
    1228:	f44f 6680 	mov.w	r6, #1024	; 0x400
    122c:	f407 4770 	and.w	r7, r7, #61440	; 0xf000
    1230:	f5b7 5100 	subs.w	r1, r7, #8192	; 0x2000
    1234:	424f      	negs	r7, r1
    1236:	414f      	adcs	r7, r1
    1238:	4628      	mov	r0, r5
    123a:	4631      	mov	r1, r6
    123c:	f7ff fd00 	bl	c40 <_malloc_r>
    1240:	b960      	cbnz	r0, 125c <__smakebuf_r+0x68>
    1242:	89a3      	ldrh	r3, [r4, #12]
    1244:	059a      	lsls	r2, r3, #22
    1246:	d41d      	bmi.n	1284 <__smakebuf_r+0x90>
    1248:	f043 0302 	orr.w	r3, r3, #2
    124c:	81a3      	strh	r3, [r4, #12]
    124e:	f104 0347 	add.w	r3, r4, #71	; 0x47
    1252:	6023      	str	r3, [r4, #0]
    1254:	6123      	str	r3, [r4, #16]
    1256:	2301      	movs	r3, #1
    1258:	6163      	str	r3, [r4, #20]
    125a:	e013      	b.n	1284 <__smakebuf_r+0x90>
    125c:	4b0a      	ldr	r3, [pc, #40]	; (1288 <__smakebuf_r+0x94>)
    125e:	62ab      	str	r3, [r5, #40]	; 0x28
    1260:	89a3      	ldrh	r3, [r4, #12]
    1262:	6020      	str	r0, [r4, #0]
    1264:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    1268:	81a3      	strh	r3, [r4, #12]
    126a:	6120      	str	r0, [r4, #16]
    126c:	6166      	str	r6, [r4, #20]
    126e:	b14f      	cbz	r7, 1284 <__smakebuf_r+0x90>
    1270:	4628      	mov	r0, r5
    1272:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    1276:	f000 f8dd 	bl	1434 <_isatty_r>
    127a:	b118      	cbz	r0, 1284 <__smakebuf_r+0x90>
    127c:	89a3      	ldrh	r3, [r4, #12]
    127e:	f043 0301 	orr.w	r3, r3, #1
    1282:	81a3      	strh	r3, [r4, #12]
    1284:	b011      	add	sp, #68	; 0x44
    1286:	bdf0      	pop	{r4, r5, r6, r7, pc}
    1288:	00000a15 	.word	0x00000a15

Disassembly of section .text._free_r:

0000128c <_free_r>:
    128c:	b530      	push	{r4, r5, lr}
    128e:	2900      	cmp	r1, #0
    1290:	d03c      	beq.n	130c <_free_r+0x80>
    1292:	f851 2c04 	ldr.w	r2, [r1, #-4]
    1296:	1f0b      	subs	r3, r1, #4
    1298:	491d      	ldr	r1, [pc, #116]	; (1310 <_free_r+0x84>)
    129a:	2a00      	cmp	r2, #0
    129c:	bfb8      	it	lt
    129e:	189b      	addlt	r3, r3, r2
    12a0:	680a      	ldr	r2, [r1, #0]
    12a2:	460c      	mov	r4, r1
    12a4:	b912      	cbnz	r2, 12ac <_free_r+0x20>
    12a6:	605a      	str	r2, [r3, #4]
    12a8:	600b      	str	r3, [r1, #0]
    12aa:	bd30      	pop	{r4, r5, pc}
    12ac:	4293      	cmp	r3, r2
    12ae:	d20d      	bcs.n	12cc <_free_r+0x40>
    12b0:	6819      	ldr	r1, [r3, #0]
    12b2:	1858      	adds	r0, r3, r1
    12b4:	4290      	cmp	r0, r2
    12b6:	d103      	bne.n	12c0 <_free_r+0x34>
    12b8:	585a      	ldr	r2, [r3, r1]
    12ba:	4411      	add	r1, r2
    12bc:	6842      	ldr	r2, [r0, #4]
    12be:	6019      	str	r1, [r3, #0]
    12c0:	605a      	str	r2, [r3, #4]
    12c2:	6023      	str	r3, [r4, #0]
    12c4:	bd30      	pop	{r4, r5, pc}
    12c6:	4299      	cmp	r1, r3
    12c8:	d803      	bhi.n	12d2 <_free_r+0x46>
    12ca:	460a      	mov	r2, r1
    12cc:	6851      	ldr	r1, [r2, #4]
    12ce:	2900      	cmp	r1, #0
    12d0:	d1f9      	bne.n	12c6 <_free_r+0x3a>
    12d2:	6814      	ldr	r4, [r2, #0]
    12d4:	1915      	adds	r5, r2, r4
    12d6:	429d      	cmp	r5, r3
    12d8:	d10a      	bne.n	12f0 <_free_r+0x64>
    12da:	681b      	ldr	r3, [r3, #0]
    12dc:	4423      	add	r3, r4
    12de:	18d0      	adds	r0, r2, r3
    12e0:	4288      	cmp	r0, r1
    12e2:	6013      	str	r3, [r2, #0]
    12e4:	d112      	bne.n	130c <_free_r+0x80>
    12e6:	6808      	ldr	r0, [r1, #0]
    12e8:	4403      	add	r3, r0
    12ea:	6013      	str	r3, [r2, #0]
    12ec:	684b      	ldr	r3, [r1, #4]
    12ee:	e00c      	b.n	130a <_free_r+0x7e>
    12f0:	d902      	bls.n	12f8 <_free_r+0x6c>
    12f2:	230c      	movs	r3, #12
    12f4:	6003      	str	r3, [r0, #0]
    12f6:	bd30      	pop	{r4, r5, pc}
    12f8:	6818      	ldr	r0, [r3, #0]
    12fa:	181c      	adds	r4, r3, r0
    12fc:	428c      	cmp	r4, r1
    12fe:	d103      	bne.n	1308 <_free_r+0x7c>
    1300:	680c      	ldr	r4, [r1, #0]
    1302:	6849      	ldr	r1, [r1, #4]
    1304:	4420      	add	r0, r4
    1306:	6018      	str	r0, [r3, #0]
    1308:	6059      	str	r1, [r3, #4]
    130a:	6053      	str	r3, [r2, #4]
    130c:	bd30      	pop	{r4, r5, pc}
    130e:	bf00      	nop
    1310:	20000258 	.word	0x20000258

Disassembly of section .text._read_r:

00001314 <_read_r>:
    1314:	b538      	push	{r3, r4, r5, lr}
    1316:	4c07      	ldr	r4, [pc, #28]	; (1334 <_read_r+0x20>)
    1318:	4605      	mov	r5, r0
    131a:	2000      	movs	r0, #0
    131c:	6020      	str	r0, [r4, #0]
    131e:	4608      	mov	r0, r1
    1320:	4611      	mov	r1, r2
    1322:	461a      	mov	r2, r3
    1324:	f7ff f8dc 	bl	4e0 <_read>
    1328:	1c43      	adds	r3, r0, #1
    132a:	d102      	bne.n	1332 <_read_r+0x1e>
    132c:	6823      	ldr	r3, [r4, #0]
    132e:	b103      	cbz	r3, 1332 <_read_r+0x1e>
    1330:	602b      	str	r3, [r5, #0]
    1332:	bd38      	pop	{r3, r4, r5, pc}
    1334:	200001a0 	.word	0x200001a0

Disassembly of section .text.cleanup_glue:

00001338 <cleanup_glue>:
    1338:	b538      	push	{r3, r4, r5, lr}
    133a:	460c      	mov	r4, r1
    133c:	6809      	ldr	r1, [r1, #0]
    133e:	4605      	mov	r5, r0
    1340:	b109      	cbz	r1, 1346 <cleanup_glue+0xe>
    1342:	f7ff fff9 	bl	1338 <cleanup_glue>
    1346:	4628      	mov	r0, r5
    1348:	4621      	mov	r1, r4
    134a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    134e:	f7ff bf9d 	b.w	128c <_free_r>

Disassembly of section .text._reclaim_reent:

00001354 <_reclaim_reent>:
    1354:	4b2d      	ldr	r3, [pc, #180]	; (140c <_reclaim_reent+0xb8>)
    1356:	b570      	push	{r4, r5, r6, lr}
    1358:	681b      	ldr	r3, [r3, #0]
    135a:	4604      	mov	r4, r0
    135c:	4298      	cmp	r0, r3
    135e:	d053      	beq.n	1408 <_reclaim_reent+0xb4>
    1360:	6a43      	ldr	r3, [r0, #36]	; 0x24
    1362:	b18b      	cbz	r3, 1388 <_reclaim_reent+0x34>
    1364:	68db      	ldr	r3, [r3, #12]
    1366:	2b00      	cmp	r3, #0
    1368:	d142      	bne.n	13f0 <_reclaim_reent+0x9c>
    136a:	e007      	b.n	137c <_reclaim_reent+0x28>
    136c:	3504      	adds	r5, #4
    136e:	2d80      	cmp	r5, #128	; 0x80
    1370:	d13f      	bne.n	13f2 <_reclaim_reent+0x9e>
    1372:	6a63      	ldr	r3, [r4, #36]	; 0x24
    1374:	4620      	mov	r0, r4
    1376:	68d9      	ldr	r1, [r3, #12]
    1378:	f7ff ff88 	bl	128c <_free_r>
    137c:	6a63      	ldr	r3, [r4, #36]	; 0x24
    137e:	6819      	ldr	r1, [r3, #0]
    1380:	b111      	cbz	r1, 1388 <_reclaim_reent+0x34>
    1382:	4620      	mov	r0, r4
    1384:	f7ff ff82 	bl	128c <_free_r>
    1388:	6961      	ldr	r1, [r4, #20]
    138a:	b111      	cbz	r1, 1392 <_reclaim_reent+0x3e>
    138c:	4620      	mov	r0, r4
    138e:	f7ff ff7d 	bl	128c <_free_r>
    1392:	6a61      	ldr	r1, [r4, #36]	; 0x24
    1394:	b111      	cbz	r1, 139c <_reclaim_reent+0x48>
    1396:	4620      	mov	r0, r4
    1398:	f7ff ff78 	bl	128c <_free_r>
    139c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
    139e:	b111      	cbz	r1, 13a6 <_reclaim_reent+0x52>
    13a0:	4620      	mov	r0, r4
    13a2:	f7ff ff73 	bl	128c <_free_r>
    13a6:	6be1      	ldr	r1, [r4, #60]	; 0x3c
    13a8:	b111      	cbz	r1, 13b0 <_reclaim_reent+0x5c>
    13aa:	4620      	mov	r0, r4
    13ac:	f7ff ff6e 	bl	128c <_free_r>
    13b0:	6c21      	ldr	r1, [r4, #64]	; 0x40
    13b2:	b111      	cbz	r1, 13ba <_reclaim_reent+0x66>
    13b4:	4620      	mov	r0, r4
    13b6:	f7ff ff69 	bl	128c <_free_r>
    13ba:	6de1      	ldr	r1, [r4, #92]	; 0x5c
    13bc:	b111      	cbz	r1, 13c4 <_reclaim_reent+0x70>
    13be:	4620      	mov	r0, r4
    13c0:	f7ff ff64 	bl	128c <_free_r>
    13c4:	6da1      	ldr	r1, [r4, #88]	; 0x58
    13c6:	b111      	cbz	r1, 13ce <_reclaim_reent+0x7a>
    13c8:	4620      	mov	r0, r4
    13ca:	f7ff ff5f 	bl	128c <_free_r>
    13ce:	6b61      	ldr	r1, [r4, #52]	; 0x34
    13d0:	b111      	cbz	r1, 13d8 <_reclaim_reent+0x84>
    13d2:	4620      	mov	r0, r4
    13d4:	f7ff ff5a 	bl	128c <_free_r>
    13d8:	69a3      	ldr	r3, [r4, #24]
    13da:	b1ab      	cbz	r3, 1408 <_reclaim_reent+0xb4>
    13dc:	6aa3      	ldr	r3, [r4, #40]	; 0x28
    13de:	4620      	mov	r0, r4
    13e0:	4798      	blx	r3
    13e2:	6ca1      	ldr	r1, [r4, #72]	; 0x48
    13e4:	b181      	cbz	r1, 1408 <_reclaim_reent+0xb4>
    13e6:	4620      	mov	r0, r4
    13e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    13ec:	f7ff bfa4 	b.w	1338 <cleanup_glue>
    13f0:	2500      	movs	r5, #0
    13f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
    13f4:	68db      	ldr	r3, [r3, #12]
    13f6:	5959      	ldr	r1, [r3, r5]
    13f8:	2900      	cmp	r1, #0
    13fa:	d0b7      	beq.n	136c <_reclaim_reent+0x18>
    13fc:	680e      	ldr	r6, [r1, #0]
    13fe:	4620      	mov	r0, r4
    1400:	f7ff ff44 	bl	128c <_free_r>
    1404:	4631      	mov	r1, r6
    1406:	e7f7      	b.n	13f8 <_reclaim_reent+0xa4>
    1408:	bd70      	pop	{r4, r5, r6, pc}
    140a:	bf00      	nop
    140c:	20000180 	.word	0x20000180

Disassembly of section .text._fstat_r:

00001410 <_fstat_r>:
    1410:	b538      	push	{r3, r4, r5, lr}
    1412:	4c07      	ldr	r4, [pc, #28]	; (1430 <_fstat_r+0x20>)
    1414:	2300      	movs	r3, #0
    1416:	4605      	mov	r5, r0
    1418:	4608      	mov	r0, r1
    141a:	4611      	mov	r1, r2
    141c:	6023      	str	r3, [r4, #0]
    141e:	f7ff f95a 	bl	6d6 <_fstat>
    1422:	1c43      	adds	r3, r0, #1
    1424:	d102      	bne.n	142c <_fstat_r+0x1c>
    1426:	6823      	ldr	r3, [r4, #0]
    1428:	b103      	cbz	r3, 142c <_fstat_r+0x1c>
    142a:	602b      	str	r3, [r5, #0]
    142c:	bd38      	pop	{r3, r4, r5, pc}
    142e:	bf00      	nop
    1430:	200001a0 	.word	0x200001a0

Disassembly of section .text._isatty_r:

00001434 <_isatty_r>:
    1434:	b538      	push	{r3, r4, r5, lr}
    1436:	4c06      	ldr	r4, [pc, #24]	; (1450 <_isatty_r+0x1c>)
    1438:	2300      	movs	r3, #0
    143a:	4605      	mov	r5, r0
    143c:	4608      	mov	r0, r1
    143e:	6023      	str	r3, [r4, #0]
    1440:	f7ff fa1e 	bl	880 <_isatty>
    1444:	1c43      	adds	r3, r0, #1
    1446:	d102      	bne.n	144e <_isatty_r+0x1a>
    1448:	6823      	ldr	r3, [r4, #0]
    144a:	b103      	cbz	r3, 144e <_isatty_r+0x1a>
    144c:	602b      	str	r3, [r5, #0]
    144e:	bd38      	pop	{r3, r4, r5, pc}
    1450:	200001a0 	.word	0x200001a0
